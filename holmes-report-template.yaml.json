{"scanId":"f05b961b-1425-4344-95f4-6a77eda9995d","totalCount":1,"createdAt":"2025-08-14T03:21:16.27878179Z","objects":[{"key":"c8e3a508-6018-4449-955e-ca538dbfa7f1/template.yaml","versionId":"7WOk1y0_x6CUwGCXKHImEa6hwCSbw0Ph","size":32059,"contentType":"application/x-yaml","lastModifiedAt":"2025-08-14T03:21:16Z","skipScans":false,"skipScansReason":"","results":[{"category":"code","scanStatus":"scanned","scanStatusMessage":"","scanners":["ACAT","Checkov","cfn-guard"],"findings":[{"findingId":1,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/SessionsTable/Properties/TableName[L:140,C:17]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":2,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/BedrockAgentServiceRole/Properties/RoleName[L:57,C:16]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":3,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/MessagesTable/Properties/TableName[L:174,C:17]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":4,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":270,"startColumn":0,"startLine":254}],"snippets":[{"startLine":254,"text":"\n  CreateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.create_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        CreateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":5,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":683,"startColumn":0,"startLine":655}],"snippets":[{"startLine":655,"text":"  # Producer Function - Enqueues analysis request\n  RequestAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.request_analysis\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - dynamodb:GetItem\n              - dynamodb:UpdateItem\n            Resource: !GetAtt SessionsTable.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        RequestAnalysis:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":6,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":971,"startColumn":0,"startLine":949}],"snippets":[{"startLine":949,"text":"\n  DeleteSessionFileAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.delete_session_file_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFileAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files/{fileKey+}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":7,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":947,"startColumn":0,"startLine":916}],"snippets":[{"startLine":916,"text":"  # Admin File Functions (no CSRF required)\n  ListSessionFilesAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.list_session_files_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFilesAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":8,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":913,"startColumn":0,"startLine":899}],"snippets":[{"startLine":899,"text":"  # Customer Feedback Function\n  FeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SubmitFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/feedback\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":9,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":896,"startColumn":0,"startLine":874}],"snippets":[{"startLine":874,"text":"\n  DeleteSessionFileFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.delete_session_file\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFile:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files/{fileKey+}\n            Method: delete\n"}],"scanner":"Checkov"},{"findingId":10,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":872,"startColumn":0,"startLine":841}],"snippets":[{"startLine":841,"text":"\n  ListSessionFilesFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.list_session_files\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFiles:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":11,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":227,"startColumn":0,"startLine":206}],"snippets":[{"startLine":206,"text":"  # Lambda Functions\n  ChatFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_message\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/message\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":12,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":839,"startColumn":0,"startLine":810}],"snippets":[{"startLine":810,"text":"  # File Upload Functions\n  GenerateUploadUrlFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.generate_presigned_url\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:GetBucketLocation\n            Resource: !GetAtt WebsiteBucket.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:PutObject\n              - s3:PutObjectAcl\n              - s3:PutObjectTagging\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        GenerateUploadUrl:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/upload-url\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":13,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":807,"startColumn":0,"startLine":794}],"snippets":[{"startLine":794,"text":"  # AWS Documentation Tools Action Group\n  AWSDocsActionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: aws_docs_handler.aws_docs_action_handler\n      MemorySize: 512\n      Timeout: 30\n      Events:\n        BedrockActionApi:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /bedrock/aws-docs-action\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":14,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":791,"startColumn":0,"startLine":775}],"snippets":[{"startLine":775,"text":"  # Session Feedback Function\n  GetSessionFeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/feedback\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":15,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":251,"startColumn":0,"startLine":229}],"snippets":[{"startLine":229,"text":"\n  ChatStreamFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_stream_handler.handle_stream_message\n      Timeout: 300\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostStreamMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/stream\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":16,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":772,"startColumn":0,"startLine":748}],"snippets":[{"startLine":748,"text":"\n  ReanalyzeWithMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.reanalyze_with_meeting_log\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        ReanalyzeWithMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/reanalyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":17,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":746,"startColumn":0,"startLine":730}],"snippets":[{"startLine":730,"text":"  # Meeting Log Functions\n  SaveMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.save_meeting_log\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SaveMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/meeting-log\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":18,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":727,"startColumn":0,"startLine":711}],"snippets":[{"startLine":711,"text":"  # Status Function - Check analysis status\n  GetAnalysisStatusFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_analysis_status\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetAnalysisStatus:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analysis-status\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":19,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":377,"startColumn":0,"startLine":350}],"snippets":[{"startLine":350,"text":"\n  GetReportFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_report\n      Timeout: 300\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        GetReport:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/report\n            Method: get\n            TimeoutInMillis: 29000\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":20,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":1011,"startColumn":0,"startLine":974}],"snippets":[{"startLine":974,"text":"  # DynamoDB Streams Handler\n  SessionStreamHandler:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: stream_handler.handle_session_stream\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n              - s3:DeleteObject\n            Resource: \n              - !GetAtt WebsiteBucket.Arn\n              - !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n          SLACK_WEBHOOK_URL: \"https://hooks.slack.com/triggers/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\"\n          CLOUDFRONT_URL: !Sub \"https://${CloudFrontDistribution.DomainName}\"\n      Events:\n        SessionStream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt SessionsTable.StreamArn\n            StartingPosition: TRIM_HORIZON\n            BatchSize: 10\n            MaximumBatchingWindowInSeconds: 5\n"}],"scanner":"Checkov"},{"findingId":21,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":708,"startColumn":0,"startLine":686}],"snippets":[{"startLine":686,"text":"  # Consumer Function - Processes analysis from SQS\n  ProcessAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.process_analysis\n      Timeout: 900\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        ProcessAnalysis:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt AnalysisQueue.Arn\n            BatchSize: 1\n"}],"scanner":"Checkov"},{"findingId":22,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":644,"startColumn":0,"startLine":624}],"snippets":[{"startLine":624,"text":"\n  UpdateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.update_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:UpdateAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        UpdateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":23,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":294,"startColumn":0,"startLine":273}],"snippets":[{"startLine":273,"text":"\n  GetSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.get_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ListUsers\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        GetSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":24,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":622,"startColumn":0,"startLine":603}],"snippets":[{"startLine":603,"text":"\n  GetAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.get_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        GetAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":25,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":601,"startColumn":0,"startLine":581}],"snippets":[{"startLine":581,"text":"\n  PrepareAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.prepare_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:PrepareAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        PrepareAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}/prepare\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":26,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":579,"startColumn":0,"startLine":559}],"snippets":[{"startLine":559,"text":"\n  DeleteAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.delete_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:DeleteAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        DeleteAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":27,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":311,"startColumn":0,"startLine":297}],"snippets":[{"startLine":297,"text":"\n  VerifySessionPinFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.verify_session_pin\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        VerifySessionPin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/verify-pin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":28,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":557,"startColumn":0,"startLine":536}],"snippets":[{"startLine":536,"text":"\n  CreateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.create_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:CreateAgent\n              - bedrock:GetAgent\n              - iam:PassRole\n            Resource: '*'\n      Events:\n        CreateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":29,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":534,"startColumn":0,"startLine":514}],"snippets":[{"startLine":514,"text":"  # Bedrock Agent Functions\n  ListAgentsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.list_agents\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:ListAgents\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        ListAgents:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":30,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":511,"startColumn":0,"startLine":494}],"snippets":[{"startLine":494,"text":"\n  ConfirmPhoneFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_phone\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:VerifyUserAttribute\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmPhone:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm-phone\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":31,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":330,"startColumn":0,"startLine":314}],"snippets":[{"startLine":314,"text":"\n  ListSessionsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.list_sessions\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        ListSessions:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":32,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":492,"startColumn":0,"startLine":475}],"snippets":[{"startLine":475,"text":"\n  VerifyTokenFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.verify_token\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:GetUser\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        VerifyToken:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/verify\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":33,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":473,"startColumn":0,"startLine":456}],"snippets":[{"startLine":456,"text":"\n  ConfirmSignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ConfirmSignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmSignup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":34,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":453,"startColumn":0,"startLine":436}],"snippets":[{"startLine":436,"text":"\n  SigninFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signin\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:AdminInitiateAuth\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":35,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":348,"startColumn":0,"startLine":332}],"snippets":[{"startLine":332,"text":"\n  GetSessionDetailsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_details\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionDetails:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/details\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":36,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":434,"startColumn":0,"startLine":417}],"snippets":[{"startLine":417,"text":"\n  SignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:SignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signup\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":37,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":415,"startColumn":0,"startLine":397}],"snippets":[{"startLine":397,"text":"\n  DeleteSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.delete_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n      Events:\n        DeleteSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":38,"findingTitle":"CKV_AWS_115","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for function-level concurrent execution limit","severity":"high","locations":[{"endColumn":0,"endLine":395,"startColumn":0,"startLine":379}],"snippets":[{"startLine":379,"text":"\n  InactivateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.inactivate_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        InactivateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/inactivate\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":39,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":708,"startColumn":0,"startLine":686}],"snippets":[{"startLine":686,"text":"  # Consumer Function - Processes analysis from SQS\n  ProcessAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.process_analysis\n      Timeout: 900\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        ProcessAnalysis:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt AnalysisQueue.Arn\n            BatchSize: 1\n"}],"scanner":"Checkov"},{"findingId":40,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":579,"startColumn":0,"startLine":559}],"snippets":[{"startLine":559,"text":"\n  DeleteAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.delete_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:DeleteAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        DeleteAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":41,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":395,"startColumn":0,"startLine":379}],"snippets":[{"startLine":379,"text":"\n  InactivateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.inactivate_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        InactivateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/inactivate\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":42,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":1011,"startColumn":0,"startLine":974}],"snippets":[{"startLine":974,"text":"  # DynamoDB Streams Handler\n  SessionStreamHandler:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: stream_handler.handle_session_stream\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n              - s3:DeleteObject\n            Resource: \n              - !GetAtt WebsiteBucket.Arn\n              - !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n          SLACK_WEBHOOK_URL: \"https://hooks.slack.com/triggers/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\"\n          CLOUDFRONT_URL: !Sub \"https://${CloudFrontDistribution.DomainName}\"\n      Events:\n        SessionStream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt SessionsTable.StreamArn\n            StartingPosition: TRIM_HORIZON\n            BatchSize: 10\n            MaximumBatchingWindowInSeconds: 5\n"}],"scanner":"Checkov"},{"findingId":43,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":971,"startColumn":0,"startLine":949}],"snippets":[{"startLine":949,"text":"\n  DeleteSessionFileAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.delete_session_file_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFileAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files/{fileKey+}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":44,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":947,"startColumn":0,"startLine":916}],"snippets":[{"startLine":916,"text":"  # Admin File Functions (no CSRF required)\n  ListSessionFilesAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.list_session_files_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFilesAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":45,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":415,"startColumn":0,"startLine":397}],"snippets":[{"startLine":397,"text":"\n  DeleteSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.delete_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n      Events:\n        DeleteSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":46,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":913,"startColumn":0,"startLine":899}],"snippets":[{"startLine":899,"text":"  # Customer Feedback Function\n  FeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SubmitFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/feedback\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":47,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":377,"startColumn":0,"startLine":350}],"snippets":[{"startLine":350,"text":"\n  GetReportFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_report\n      Timeout: 300\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        GetReport:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/report\n            Method: get\n            TimeoutInMillis: 29000\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":48,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":227,"startColumn":0,"startLine":206}],"snippets":[{"startLine":206,"text":"  # Lambda Functions\n  ChatFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_message\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/message\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":49,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":434,"startColumn":0,"startLine":417}],"snippets":[{"startLine":417,"text":"\n  SignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:SignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signup\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":50,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":896,"startColumn":0,"startLine":874}],"snippets":[{"startLine":874,"text":"\n  DeleteSessionFileFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.delete_session_file\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFile:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files/{fileKey+}\n            Method: delete\n"}],"scanner":"Checkov"},{"findingId":51,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":872,"startColumn":0,"startLine":841}],"snippets":[{"startLine":841,"text":"\n  ListSessionFilesFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.list_session_files\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFiles:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":52,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":839,"startColumn":0,"startLine":810}],"snippets":[{"startLine":810,"text":"  # File Upload Functions\n  GenerateUploadUrlFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.generate_presigned_url\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:GetBucketLocation\n            Resource: !GetAtt WebsiteBucket.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:PutObject\n              - s3:PutObjectAcl\n              - s3:PutObjectTagging\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        GenerateUploadUrl:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/upload-url\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":53,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":453,"startColumn":0,"startLine":436}],"snippets":[{"startLine":436,"text":"\n  SigninFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signin\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:AdminInitiateAuth\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":54,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":251,"startColumn":0,"startLine":229}],"snippets":[{"startLine":229,"text":"\n  ChatStreamFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_stream_handler.handle_stream_message\n      Timeout: 300\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostStreamMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/stream\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":55,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":807,"startColumn":0,"startLine":794}],"snippets":[{"startLine":794,"text":"  # AWS Documentation Tools Action Group\n  AWSDocsActionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: aws_docs_handler.aws_docs_action_handler\n      MemorySize: 512\n      Timeout: 30\n      Events:\n        BedrockActionApi:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /bedrock/aws-docs-action\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":56,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":791,"startColumn":0,"startLine":775}],"snippets":[{"startLine":775,"text":"  # Session Feedback Function\n  GetSessionFeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/feedback\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":57,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":473,"startColumn":0,"startLine":456}],"snippets":[{"startLine":456,"text":"\n  ConfirmSignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ConfirmSignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmSignup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":58,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":772,"startColumn":0,"startLine":748}],"snippets":[{"startLine":748,"text":"\n  ReanalyzeWithMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.reanalyze_with_meeting_log\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        ReanalyzeWithMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/reanalyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":59,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":348,"startColumn":0,"startLine":332}],"snippets":[{"startLine":332,"text":"\n  GetSessionDetailsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_details\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionDetails:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/details\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":60,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":270,"startColumn":0,"startLine":254}],"snippets":[{"startLine":254,"text":"\n  CreateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.create_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        CreateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":61,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":492,"startColumn":0,"startLine":475}],"snippets":[{"startLine":475,"text":"\n  VerifyTokenFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.verify_token\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:GetUser\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        VerifyToken:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/verify\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":62,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":746,"startColumn":0,"startLine":730}],"snippets":[{"startLine":730,"text":"  # Meeting Log Functions\n  SaveMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.save_meeting_log\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SaveMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/meeting-log\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":63,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":727,"startColumn":0,"startLine":711}],"snippets":[{"startLine":711,"text":"  # Status Function - Check analysis status\n  GetAnalysisStatusFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_analysis_status\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetAnalysisStatus:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analysis-status\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":64,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":294,"startColumn":0,"startLine":273}],"snippets":[{"startLine":273,"text":"\n  GetSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.get_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ListUsers\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        GetSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":65,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":511,"startColumn":0,"startLine":494}],"snippets":[{"startLine":494,"text":"\n  ConfirmPhoneFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_phone\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:VerifyUserAttribute\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmPhone:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm-phone\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":66,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":683,"startColumn":0,"startLine":655}],"snippets":[{"startLine":655,"text":"  # Producer Function - Enqueues analysis request\n  RequestAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.request_analysis\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - dynamodb:GetItem\n              - dynamodb:UpdateItem\n            Resource: !GetAtt SessionsTable.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        RequestAnalysis:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":67,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":644,"startColumn":0,"startLine":624}],"snippets":[{"startLine":624,"text":"\n  UpdateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.update_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:UpdateAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        UpdateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":68,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":622,"startColumn":0,"startLine":603}],"snippets":[{"startLine":603,"text":"\n  GetAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.get_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        GetAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":69,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":534,"startColumn":0,"startLine":514}],"snippets":[{"startLine":514,"text":"  # Bedrock Agent Functions\n  ListAgentsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.list_agents\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:ListAgents\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        ListAgents:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":70,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":311,"startColumn":0,"startLine":297}],"snippets":[{"startLine":297,"text":"\n  VerifySessionPinFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.verify_session_pin\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        VerifySessionPin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/verify-pin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":71,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":330,"startColumn":0,"startLine":314}],"snippets":[{"startLine":314,"text":"\n  ListSessionsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.list_sessions\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        ListSessions:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":72,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":601,"startColumn":0,"startLine":581}],"snippets":[{"startLine":581,"text":"\n  PrepareAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.prepare_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:PrepareAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        PrepareAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}/prepare\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":73,"findingTitle":"CKV_AWS_116","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)","severity":"high","locations":[{"endColumn":0,"endLine":557,"startColumn":0,"startLine":536}],"snippets":[{"startLine":536,"text":"\n  CreateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.create_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:CreateAgent\n              - bedrock:GetAgent\n              - iam:PassRole\n            Resource: '*'\n      Events:\n        CreateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":74,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":807,"startColumn":0,"startLine":794}],"snippets":[{"startLine":794,"text":"  # AWS Documentation Tools Action Group\n  AWSDocsActionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: aws_docs_handler.aws_docs_action_handler\n      MemorySize: 512\n      Timeout: 30\n      Events:\n        BedrockActionApi:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /bedrock/aws-docs-action\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":75,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":913,"startColumn":0,"startLine":899}],"snippets":[{"startLine":899,"text":"  # Customer Feedback Function\n  FeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SubmitFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/feedback\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":76,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":1011,"startColumn":0,"startLine":974}],"snippets":[{"startLine":974,"text":"  # DynamoDB Streams Handler\n  SessionStreamHandler:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: stream_handler.handle_session_stream\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n              - s3:DeleteObject\n            Resource: \n              - !GetAtt WebsiteBucket.Arn\n              - !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n          SLACK_WEBHOOK_URL: \"https://hooks.slack.com/triggers/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\"\n          CLOUDFRONT_URL: !Sub \"https://${CloudFrontDistribution.DomainName}\"\n      Events:\n        SessionStream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt SessionsTable.StreamArn\n            StartingPosition: TRIM_HORIZON\n            BatchSize: 10\n            MaximumBatchingWindowInSeconds: 5\n"}],"scanner":"Checkov"},{"findingId":77,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":557,"startColumn":0,"startLine":536}],"snippets":[{"startLine":536,"text":"\n  CreateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.create_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:CreateAgent\n              - bedrock:GetAgent\n              - iam:PassRole\n            Resource: '*'\n      Events:\n        CreateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":78,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":579,"startColumn":0,"startLine":559}],"snippets":[{"startLine":559,"text":"\n  DeleteAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.delete_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:DeleteAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        DeleteAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":79,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":311,"startColumn":0,"startLine":297}],"snippets":[{"startLine":297,"text":"\n  VerifySessionPinFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.verify_session_pin\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        VerifySessionPin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/verify-pin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":80,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":395,"startColumn":0,"startLine":379}],"snippets":[{"startLine":379,"text":"\n  InactivateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.inactivate_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        InactivateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/inactivate\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":81,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":971,"startColumn":0,"startLine":949}],"snippets":[{"startLine":949,"text":"\n  DeleteSessionFileAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.delete_session_file_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFileAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files/{fileKey+}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":82,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":601,"startColumn":0,"startLine":581}],"snippets":[{"startLine":581,"text":"\n  PrepareAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.prepare_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:PrepareAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        PrepareAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}/prepare\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":83,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":534,"startColumn":0,"startLine":514}],"snippets":[{"startLine":514,"text":"  # Bedrock Agent Functions\n  ListAgentsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.list_agents\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:ListAgents\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        ListAgents:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":84,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":377,"startColumn":0,"startLine":350}],"snippets":[{"startLine":350,"text":"\n  GetReportFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_report\n      Timeout: 300\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        GetReport:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/report\n            Method: get\n            TimeoutInMillis: 29000\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":85,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":947,"startColumn":0,"startLine":916}],"snippets":[{"startLine":916,"text":"  # Admin File Functions (no CSRF required)\n  ListSessionFilesAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.list_session_files_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFilesAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":86,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":622,"startColumn":0,"startLine":603}],"snippets":[{"startLine":603,"text":"\n  GetAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.get_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        GetAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":87,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":415,"startColumn":0,"startLine":397}],"snippets":[{"startLine":397,"text":"\n  DeleteSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.delete_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n      Events:\n        DeleteSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":88,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":896,"startColumn":0,"startLine":874}],"snippets":[{"startLine":874,"text":"\n  DeleteSessionFileFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.delete_session_file\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFile:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files/{fileKey+}\n            Method: delete\n"}],"scanner":"Checkov"},{"findingId":89,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":330,"startColumn":0,"startLine":314}],"snippets":[{"startLine":314,"text":"\n  ListSessionsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.list_sessions\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        ListSessions:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":90,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":644,"startColumn":0,"startLine":624}],"snippets":[{"startLine":624,"text":"\n  UpdateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.update_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:UpdateAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        UpdateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":91,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":294,"startColumn":0,"startLine":273}],"snippets":[{"startLine":273,"text":"\n  GetSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.get_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ListUsers\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        GetSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":92,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":434,"startColumn":0,"startLine":417}],"snippets":[{"startLine":417,"text":"\n  SignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:SignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signup\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":93,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":227,"startColumn":0,"startLine":206}],"snippets":[{"startLine":206,"text":"  # Lambda Functions\n  ChatFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_message\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/message\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":94,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":511,"startColumn":0,"startLine":494}],"snippets":[{"startLine":494,"text":"\n  ConfirmPhoneFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_phone\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:VerifyUserAttribute\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmPhone:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm-phone\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":95,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":683,"startColumn":0,"startLine":655}],"snippets":[{"startLine":655,"text":"  # Producer Function - Enqueues analysis request\n  RequestAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.request_analysis\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - dynamodb:GetItem\n              - dynamodb:UpdateItem\n            Resource: !GetAtt SessionsTable.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        RequestAnalysis:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":96,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":872,"startColumn":0,"startLine":841}],"snippets":[{"startLine":841,"text":"\n  ListSessionFilesFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.list_session_files\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFiles:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":97,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":839,"startColumn":0,"startLine":810}],"snippets":[{"startLine":810,"text":"  # File Upload Functions\n  GenerateUploadUrlFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.generate_presigned_url\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:GetBucketLocation\n            Resource: !GetAtt WebsiteBucket.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:PutObject\n              - s3:PutObjectAcl\n              - s3:PutObjectTagging\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        GenerateUploadUrl:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/upload-url\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":98,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":453,"startColumn":0,"startLine":436}],"snippets":[{"startLine":436,"text":"\n  SigninFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signin\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:AdminInitiateAuth\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":99,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":708,"startColumn":0,"startLine":686}],"snippets":[{"startLine":686,"text":"  # Consumer Function - Processes analysis from SQS\n  ProcessAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.process_analysis\n      Timeout: 900\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        ProcessAnalysis:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt AnalysisQueue.Arn\n            BatchSize: 1\n"}],"scanner":"Checkov"},{"findingId":100,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":348,"startColumn":0,"startLine":332}],"snippets":[{"startLine":332,"text":"\n  GetSessionDetailsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_details\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionDetails:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/details\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":101,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":251,"startColumn":0,"startLine":229}],"snippets":[{"startLine":229,"text":"\n  ChatStreamFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_stream_handler.handle_stream_message\n      Timeout: 300\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostStreamMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/stream\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":102,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":791,"startColumn":0,"startLine":775}],"snippets":[{"startLine":775,"text":"  # Session Feedback Function\n  GetSessionFeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/feedback\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":103,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":727,"startColumn":0,"startLine":711}],"snippets":[{"startLine":711,"text":"  # Status Function - Check analysis status\n  GetAnalysisStatusFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_analysis_status\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetAnalysisStatus:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analysis-status\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":104,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":270,"startColumn":0,"startLine":254}],"snippets":[{"startLine":254,"text":"\n  CreateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.create_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        CreateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":105,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":772,"startColumn":0,"startLine":748}],"snippets":[{"startLine":748,"text":"\n  ReanalyzeWithMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.reanalyze_with_meeting_log\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        ReanalyzeWithMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/reanalyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":106,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":492,"startColumn":0,"startLine":475}],"snippets":[{"startLine":475,"text":"\n  VerifyTokenFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.verify_token\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:GetUser\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        VerifyToken:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/verify\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":107,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":746,"startColumn":0,"startLine":730}],"snippets":[{"startLine":730,"text":"  # Meeting Log Functions\n  SaveMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.save_meeting_log\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SaveMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/meeting-log\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":108,"findingTitle":"CKV_AWS_117","findingType":"code","findingDetail":"Ensure that AWS Lambda function is configured inside a VPC","severity":"high","locations":[{"endColumn":0,"endLine":473,"startColumn":0,"startLine":456}],"snippets":[{"startLine":456,"text":"\n  ConfirmSignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ConfirmSignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmSignup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":109,"findingTitle":"CKV_AWS_119","findingType":"code","findingDetail":"Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK","severity":"high","locations":[{"endColumn":0,"endLine":189,"startColumn":0,"startLine":172}],"snippets":[{"startLine":172,"text":"\n  MessagesTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: mte-messages\n      BillingMode: PAY_PER_REQUEST\n      AttributeDefinitions:\n        - AttributeName: PK\n          AttributeType: S\n        - AttributeName: SK\n          AttributeType: S\n      KeySchema:\n        - AttributeName: PK\n          KeyType: HASH\n        - AttributeName: SK\n          KeyType: RANGE\n      TimeToLiveSpecification:\n        AttributeName: ttl\n        Enabled: true\n"}],"scanner":"Checkov"},{"findingId":110,"findingTitle":"CKV_AWS_119","findingType":"code","findingDetail":"Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK","severity":"high","locations":[{"endColumn":0,"endLine":170,"startColumn":0,"startLine":138}],"snippets":[{"startLine":138,"text":"  # DynamoDB Tables\n  SessionsTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: mte-sessions\n      BillingMode: PAY_PER_REQUEST\n      AttributeDefinitions:\n        - AttributeName: PK\n          AttributeType: S\n        - AttributeName: SK\n          AttributeType: S\n        - AttributeName: GSI1PK\n          AttributeType: S\n        - AttributeName: GSI1SK\n          AttributeType: S\n      KeySchema:\n        - AttributeName: PK\n          KeyType: HASH\n        - AttributeName: SK\n          KeyType: RANGE\n      GlobalSecondaryIndexes:\n        - IndexName: GSI1\n          KeySchema:\n            - AttributeName: GSI1PK\n              KeyType: HASH\n            - AttributeName: GSI1SK\n              KeyType: RANGE\n          Projection:\n            ProjectionType: ALL\n      TimeToLiveSpecification:\n        AttributeName: ttl\n        Enabled: true\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n"}],"scanner":"Checkov"},{"findingId":111,"findingTitle":"CKV_AWS_120","findingType":"code","findingDetail":"Ensure API Gateway caching is enabled","severity":"high","locations":[{"endColumn":0,"endLine":203,"startColumn":0,"startLine":192}],"snippets":[{"startLine":192,"text":"  # API Gateway\n  ApiGateway:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: !Ref Stage\n      Cors:\n        AllowMethods: \"'*'\"\n        AllowHeaders: \"'*'\"\n        AllowOrigin: \"'*'\"\n      Auth:\n        Authorizers:\n          CognitoAuthorizer:\n            UserPoolArn: !GetAtt AdminUserPool.Arn\n"}],"scanner":"Checkov"},{"findingId":112,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":622,"startColumn":0,"startLine":603}],"snippets":[{"startLine":603,"text":"\n  GetAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.get_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        GetAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":113,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":791,"startColumn":0,"startLine":775}],"snippets":[{"startLine":775,"text":"  # Session Feedback Function\n  GetSessionFeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/feedback\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":114,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":473,"startColumn":0,"startLine":456}],"snippets":[{"startLine":456,"text":"\n  ConfirmSignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ConfirmSignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmSignup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":115,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":348,"startColumn":0,"startLine":332}],"snippets":[{"startLine":332,"text":"\n  GetSessionDetailsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_details\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetSessionDetails:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/details\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":116,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":727,"startColumn":0,"startLine":711}],"snippets":[{"startLine":711,"text":"  # Status Function - Check analysis status\n  GetAnalysisStatusFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_analysis_status\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        GetAnalysisStatus:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analysis-status\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":117,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":807,"startColumn":0,"startLine":794}],"snippets":[{"startLine":794,"text":"  # AWS Documentation Tools Action Group\n  AWSDocsActionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: aws_docs_handler.aws_docs_action_handler\n      MemorySize: 512\n      Timeout: 30\n      Events:\n        BedrockActionApi:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /bedrock/aws-docs-action\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":118,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":294,"startColumn":0,"startLine":273}],"snippets":[{"startLine":273,"text":"\n  GetSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.get_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:ListUsers\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        GetSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":119,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":395,"startColumn":0,"startLine":379}],"snippets":[{"startLine":379,"text":"\n  InactivateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.inactivate_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        InactivateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/inactivate\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":120,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":492,"startColumn":0,"startLine":475}],"snippets":[{"startLine":475,"text":"\n  VerifyTokenFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.verify_token\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:GetUser\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        VerifyToken:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/verify\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":121,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":839,"startColumn":0,"startLine":810}],"snippets":[{"startLine":810,"text":"  # File Upload Functions\n  GenerateUploadUrlFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.generate_presigned_url\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:GetBucketLocation\n            Resource: !GetAtt WebsiteBucket.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:PutObject\n              - s3:PutObjectAcl\n              - s3:PutObjectTagging\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        GenerateUploadUrl:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/upload-url\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":122,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":453,"startColumn":0,"startLine":436}],"snippets":[{"startLine":436,"text":"\n  SigninFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signin\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:AdminInitiateAuth\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":123,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":708,"startColumn":0,"startLine":686}],"snippets":[{"startLine":686,"text":"  # Consumer Function - Processes analysis from SQS\n  ProcessAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.process_analysis\n      Timeout: 900\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        ProcessAnalysis:\n          Type: SQS\n          Properties:\n            Queue: !GetAtt AnalysisQueue.Arn\n            BatchSize: 1\n"}],"scanner":"Checkov"},{"findingId":124,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":251,"startColumn":0,"startLine":229}],"snippets":[{"startLine":229,"text":"\n  ChatStreamFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_stream_handler.handle_stream_message\n      Timeout: 300\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostStreamMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/stream\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":125,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":872,"startColumn":0,"startLine":841}],"snippets":[{"startLine":841,"text":"\n  ListSessionFilesFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.list_session_files\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFiles:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files\n            Method: get\n"}],"scanner":"Checkov"},{"findingId":126,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":377,"startColumn":0,"startLine":350}],"snippets":[{"startLine":350,"text":"\n  GetReportFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.get_session_report\n      Timeout: 300\n      MemorySize: 1024\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n              - bedrock:InvokeModel\n            Resource: '*'\n      Events:\n        GetReport:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/report\n            Method: get\n            TimeoutInMillis: 29000\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":127,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":511,"startColumn":0,"startLine":494}],"snippets":[{"startLine":494,"text":"\n  ConfirmPhoneFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.confirm_phone\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:VerifyUserAttribute\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        ConfirmPhone:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/confirm-phone\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":128,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":683,"startColumn":0,"startLine":655}],"snippets":[{"startLine":655,"text":"  # Producer Function - Enqueues analysis request\n  RequestAnalysisFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.request_analysis\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - dynamodb:GetItem\n              - dynamodb:UpdateItem\n            Resource: !GetAtt SessionsTable.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        RequestAnalysis:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/analyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":129,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":896,"startColumn":0,"startLine":874}],"snippets":[{"startLine":874,"text":"\n  DeleteSessionFileFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: file_upload_handler.delete_session_file\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFile:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/files/{fileKey+}\n            Method: delete\n"}],"scanner":"Checkov"},{"findingId":130,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":772,"startColumn":0,"startLine":748}],"snippets":[{"startLine":748,"text":"\n  ReanalyzeWithMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.reanalyze_with_meeting_log\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n      Events:\n        ReanalyzeWithMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/reanalyze\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":131,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":644,"startColumn":0,"startLine":624}],"snippets":[{"startLine":624,"text":"\n  UpdateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.update_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:UpdateAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        UpdateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":132,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":311,"startColumn":0,"startLine":297}],"snippets":[{"startLine":297,"text":"\n  VerifySessionPinFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.verify_session_pin\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        VerifySessionPin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/verify-pin\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":133,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":434,"startColumn":0,"startLine":417}],"snippets":[{"startLine":417,"text":"\n  SignupFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: auth_handler.signup\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - cognito-idp:SignUp\n            Resource: !GetAtt AdminUserPool.Arn\n      Events:\n        Signup:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/auth/signup\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":134,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":913,"startColumn":0,"startLine":899}],"snippets":[{"startLine":899,"text":"  # Customer Feedback Function\n  FeedbackFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_feedback\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SubmitFeedback:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/session/{sessionId}/feedback\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":135,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":330,"startColumn":0,"startLine":314}],"snippets":[{"startLine":314,"text":"\n  ListSessionsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.list_sessions\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        ListSessions:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":136,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":227,"startColumn":0,"startLine":206}],"snippets":[{"startLine":206,"text":"  # Lambda Functions\n  ChatFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: chat_handler.handle_message\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:InvokeAgent\n            Resource: '*'\n      Events:\n        PostMessage:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/chat/message\n            Method: post\n"}],"scanner":"Checkov"},{"findingId":137,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":947,"startColumn":0,"startLine":916}],"snippets":[{"startLine":916,"text":"  # Admin File Functions (no CSRF required)\n  ListSessionFilesAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.list_session_files_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n            Resource: !GetAtt WebsiteBucket.Arn\n            Condition:\n              StringLike:\n                s3:prefix: \"uploads/*\"\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:HeadObject\n              - s3:GetObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        ListSessionFilesAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":138,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":415,"startColumn":0,"startLine":397}],"snippets":[{"startLine":397,"text":"\n  DeleteSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.delete_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n      Events:\n        DeleteSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":139,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":534,"startColumn":0,"startLine":514}],"snippets":[{"startLine":514,"text":"  # Bedrock Agent Functions\n  ListAgentsFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.list_agents\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:ListAgents\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        ListAgents:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: get\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":140,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":746,"startColumn":0,"startLine":730}],"snippets":[{"startLine":730,"text":"  # Meeting Log Functions\n  SaveMeetingLogFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_handler.save_meeting_log\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        SaveMeetingLog:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/meeting-log\n            Method: put\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":141,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":971,"startColumn":0,"startLine":949}],"snippets":[{"startLine":949,"text":"\n  DeleteSessionFileAdminFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: admin_file_handler.delete_session_file_admin\n      Environment:\n        Variables:\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:DeleteObject\n            Resource: !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Events:\n        DeleteSessionFileAdmin:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions/{sessionId}/files/{fileKey+}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":142,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":270,"startColumn":0,"startLine":254}],"snippets":[{"startLine":254,"text":"\n  CreateSessionFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: session_handler.create_session\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n      Events:\n        CreateSession:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/sessions\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":143,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":557,"startColumn":0,"startLine":536}],"snippets":[{"startLine":536,"text":"\n  CreateAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.create_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:CreateAgent\n              - bedrock:GetAgent\n              - iam:PassRole\n            Resource: '*'\n      Events:\n        CreateAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":144,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":579,"startColumn":0,"startLine":559}],"snippets":[{"startLine":559,"text":"\n  DeleteAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.delete_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:DeleteAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        DeleteAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}\n            Method: delete\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":145,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":1011,"startColumn":0,"startLine":974}],"snippets":[{"startLine":974,"text":"  # DynamoDB Streams Handler\n  SessionStreamHandler:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: stream_handler.handle_session_stream\n      Policies:\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref MessagesTable\n\n        - Statement:\n            Effect: Allow\n            Action:\n              - sqs:SendMessage\n            Resource: !GetAtt AnalysisQueue.Arn\n        - Statement:\n            Effect: Allow\n            Action:\n              - s3:ListBucket\n              - s3:DeleteObject\n            Resource: \n              - !GetAtt WebsiteBucket.Arn\n              - !Sub \"${WebsiteBucket.Arn}/uploads/*\"\n      Environment:\n        Variables:\n          ANALYSIS_QUEUE_URL: !Ref AnalysisQueue\n          WEBSITE_BUCKET: !Ref WebsiteBucket\n          SLACK_WEBHOOK_URL: \"https://hooks.slack.com/triggers/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\"\n          CLOUDFRONT_URL: !Sub \"https://${CloudFrontDistribution.DomainName}\"\n      Events:\n        SessionStream:\n          Type: DynamoDB\n          Properties:\n            Stream: !GetAtt SessionsTable.StreamArn\n            StartingPosition: TRIM_HORIZON\n            BatchSize: 10\n            MaximumBatchingWindowInSeconds: 5\n"}],"scanner":"Checkov"},{"findingId":146,"findingTitle":"CKV_AWS_173","findingType":"code","findingDetail":"Check encryption settings for Lambda environment variable","severity":"high","locations":[{"endColumn":0,"endLine":601,"startColumn":0,"startLine":581}],"snippets":[{"startLine":581,"text":"\n  PrepareAgentFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      CodeUri: packages/backend/\n      Handler: agent_handler.prepare_agent\n      Policies:\n        - Statement:\n            Effect: Allow\n            Action:\n              - bedrock:PrepareAgent\n              - bedrock:GetAgent\n            Resource: '*'\n      Events:\n        PrepareAgent:\n          Type: Api\n          Properties:\n            RestApiId: !Ref ApiGateway\n            Path: /api/admin/agents/{agentId}/prepare\n            Method: post\n            Auth:\n              Authorizer: CognitoAuthorizer\n"}],"scanner":"Checkov"},{"findingId":147,"findingTitle":"CKV_AWS_174","findingType":"code","findingDetail":"Verify CloudFront Distribution Viewer Certificate is using TLS v1.2","severity":"high","locations":[{"endColumn":0,"endLine":1099,"startColumn":0,"startLine":1074}],"snippets":[{"startLine":1074,"text":"  # CloudFront Distribution\n  CloudFrontDistribution:\n    Type: AWS::CloudFront::Distribution\n    Properties:\n      DistributionConfig:\n        Origins:\n          - Id: S3Origin\n            DomainName: !GetAtt WebsiteBucket.RegionalDomainName\n            S3OriginConfig:\n              OriginAccessIdentity: ''\n            OriginAccessControlId: !Ref OriginAccessControl\n        Enabled: true\n        DefaultRootObject: index.html\n        DefaultCacheBehavior:\n          TargetOriginId: S3Origin\n          ViewerProtocolPolicy: redirect-to-https\n          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized\n          Compress: true\n        CustomErrorResponses:\n          - ErrorCode: 404\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n          - ErrorCode: 403\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n        PriceClass: PriceClass_100\n        Comment: !Sub \"MTE PreChat Website - ${Stage}\"\n"}],"scanner":"Checkov"},{"findingId":148,"findingTitle":"CKV_AWS_18","findingType":"code","findingDetail":"Ensure the S3 bucket has access logging enabled","severity":"high","locations":[{"endColumn":0,"endLine":1040,"startColumn":0,"startLine":1014}],"snippets":[{"startLine":1014,"text":"  # S3 Bucket for Static Website (Private)\n  WebsiteBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub \"mte-prechat-website-${Stage}-${AWS::AccountId}\"\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: true\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: true\n      CorsConfiguration:\n        CorsRules:\n          - Id: FileUploadCorsRule\n            AllowedHeaders:\n              - \"*\"\n            AllowedMethods:\n              - PUT\n              - POST\n              - GET\n              - HEAD\n              - DELETE\n            AllowedOrigins:\n              - \"*\"\n            ExposedHeaders:\n              - ETag\n              - x-amz-meta-original-filename-encoded\n              - x-amz-version-id\n            MaxAge: 3600\n"}],"scanner":"Checkov"},{"findingId":149,"findingTitle":"CKV_AWS_21","findingType":"code","findingDetail":"Ensure the S3 bucket has versioning enabled","severity":"high","locations":[{"endColumn":0,"endLine":1040,"startColumn":0,"startLine":1014}],"snippets":[{"startLine":1014,"text":"  # S3 Bucket for Static Website (Private)\n  WebsiteBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub \"mte-prechat-website-${Stage}-${AWS::AccountId}\"\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: true\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: true\n      CorsConfiguration:\n        CorsRules:\n          - Id: FileUploadCorsRule\n            AllowedHeaders:\n              - \"*\"\n            AllowedMethods:\n              - PUT\n              - POST\n              - GET\n              - HEAD\n              - DELETE\n            AllowedOrigins:\n              - \"*\"\n            ExposedHeaders:\n              - ETag\n              - x-amz-meta-original-filename-encoded\n              - x-amz-version-id\n            MaxAge: 3600\n"}],"scanner":"Checkov"},{"findingId":150,"findingTitle":"CKV_AWS_27","findingType":"code","findingDetail":"Ensure all data stored in the SQS queue is encrypted","severity":"high","locations":[{"endColumn":0,"endLine":652,"startColumn":0,"startLine":647}],"snippets":[{"startLine":647,"text":"  # SQS Queue for Analysis Jobs\n  AnalysisQueue:\n    Type: AWS::SQS::Queue\n    Properties:\n      QueueName: mte-analysis-queue\n      VisibilityTimeout: 900\n      MessageRetentionPeriod: 1209600\n"}],"scanner":"Checkov"},{"findingId":151,"findingTitle":"CKV_AWS_28","findingType":"code","findingDetail":"Ensure DynamoDB point in time recovery (backup) is enabled","severity":"high","locations":[{"endColumn":0,"endLine":170,"startColumn":0,"startLine":138}],"snippets":[{"startLine":138,"text":"  # DynamoDB Tables\n  SessionsTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: mte-sessions\n      BillingMode: PAY_PER_REQUEST\n      AttributeDefinitions:\n        - AttributeName: PK\n          AttributeType: S\n        - AttributeName: SK\n          AttributeType: S\n        - AttributeName: GSI1PK\n          AttributeType: S\n        - AttributeName: GSI1SK\n          AttributeType: S\n      KeySchema:\n        - AttributeName: PK\n          KeyType: HASH\n        - AttributeName: SK\n          KeyType: RANGE\n      GlobalSecondaryIndexes:\n        - IndexName: GSI1\n          KeySchema:\n            - AttributeName: GSI1PK\n              KeyType: HASH\n            - AttributeName: GSI1SK\n              KeyType: RANGE\n          Projection:\n            ProjectionType: ALL\n      TimeToLiveSpecification:\n        AttributeName: ttl\n        Enabled: true\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n"}],"scanner":"Checkov"},{"findingId":152,"findingTitle":"CKV_AWS_28","findingType":"code","findingDetail":"Ensure DynamoDB point in time recovery (backup) is enabled","severity":"high","locations":[{"endColumn":0,"endLine":189,"startColumn":0,"startLine":172}],"snippets":[{"startLine":172,"text":"\n  MessagesTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: mte-messages\n      BillingMode: PAY_PER_REQUEST\n      AttributeDefinitions:\n        - AttributeName: PK\n          AttributeType: S\n        - AttributeName: SK\n          AttributeType: S\n      KeySchema:\n        - AttributeName: PK\n          KeyType: HASH\n        - AttributeName: SK\n          KeyType: RANGE\n      TimeToLiveSpecification:\n        AttributeName: ttl\n        Enabled: true\n"}],"scanner":"Checkov"},{"findingId":153,"findingTitle":"CKV_AWS_68","findingType":"code","findingDetail":"CloudFront Distribution should have WAF enabled","severity":"high","locations":[{"endColumn":0,"endLine":1099,"startColumn":0,"startLine":1074}],"snippets":[{"startLine":1074,"text":"  # CloudFront Distribution\n  CloudFrontDistribution:\n    Type: AWS::CloudFront::Distribution\n    Properties:\n      DistributionConfig:\n        Origins:\n          - Id: S3Origin\n            DomainName: !GetAtt WebsiteBucket.RegionalDomainName\n            S3OriginConfig:\n              OriginAccessIdentity: ''\n            OriginAccessControlId: !Ref OriginAccessControl\n        Enabled: true\n        DefaultRootObject: index.html\n        DefaultCacheBehavior:\n          TargetOriginId: S3Origin\n          ViewerProtocolPolicy: redirect-to-https\n          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized\n          Compress: true\n        CustomErrorResponses:\n          - ErrorCode: 404\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n          - ErrorCode: 403\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n        PriceClass: PriceClass_100\n        Comment: !Sub \"MTE PreChat Website - ${Stage}\"\n"}],"scanner":"Checkov"},{"findingId":154,"findingTitle":"CKV_AWS_73","findingType":"code","findingDetail":"Ensure API Gateway has X-Ray Tracing enabled","severity":"high","locations":[{"endColumn":0,"endLine":203,"startColumn":0,"startLine":192}],"snippets":[{"startLine":192,"text":"  # API Gateway\n  ApiGateway:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: !Ref Stage\n      Cors:\n        AllowMethods: \"'*'\"\n        AllowHeaders: \"'*'\"\n        AllowOrigin: \"'*'\"\n      Auth:\n        Authorizers:\n          CognitoAuthorizer:\n            UserPoolArn: !GetAtt AdminUserPool.Arn\n"}],"scanner":"Checkov"},{"findingId":155,"findingTitle":"CKV_AWS_76","findingType":"code","findingDetail":"Ensure API Gateway has Access Logging enabled","severity":"high","locations":[{"endColumn":0,"endLine":203,"startColumn":0,"startLine":192}],"snippets":[{"startLine":192,"text":"  # API Gateway\n  ApiGateway:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: !Ref Stage\n      Cors:\n        AllowMethods: \"'*'\"\n        AllowHeaders: \"'*'\"\n        AllowOrigin: \"'*'\"\n      Auth:\n        Authorizers:\n          CognitoAuthorizer:\n            UserPoolArn: !GetAtt AdminUserPool.Arn\n"}],"scanner":"Checkov"},{"findingId":156,"findingTitle":"CKV_AWS_86","findingType":"code","findingDetail":"Ensure CloudFront Distribution has Access Logging enabled","severity":"high","locations":[{"endColumn":0,"endLine":1099,"startColumn":0,"startLine":1074}],"snippets":[{"startLine":1074,"text":"  # CloudFront Distribution\n  CloudFrontDistribution:\n    Type: AWS::CloudFront::Distribution\n    Properties:\n      DistributionConfig:\n        Origins:\n          - Id: S3Origin\n            DomainName: !GetAtt WebsiteBucket.RegionalDomainName\n            S3OriginConfig:\n              OriginAccessIdentity: ''\n            OriginAccessControlId: !Ref OriginAccessControl\n        Enabled: true\n        DefaultRootObject: index.html\n        DefaultCacheBehavior:\n          TargetOriginId: S3Origin\n          ViewerProtocolPolicy: redirect-to-https\n          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized\n          Compress: true\n        CustomErrorResponses:\n          - ErrorCode: 404\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n          - ErrorCode: 403\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n        PriceClass: PriceClass_100\n        Comment: !Sub \"MTE PreChat Website - ${Stage}\"\n"}],"scanner":"Checkov"},{"findingId":157,"findingTitle":"CLOUDFRONT_ACCESSLOGS_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [Logging] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. \n    Violation: CloudFront Distributions need to be configured to log informaiton about requests the Distribution receives.\n    Fix: Set the CloudFront Distribution DistributionConfig.Logging.Bucket property to an S3 bucket you own that has been configured to receive CloudFront standard logs.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":158,"findingTitle":"CLOUDFRONT_CUSTOM_SSL_CERTIFICATE","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":159,"findingTitle":"CLOUDFRONT_CUSTOM_SSL_CERTIFICATE","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.AcmCertificateArn] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":160,"findingTitle":"CLOUDFRONT_CUSTOM_SSL_CERTIFICATE","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.IamCertificateId] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. \n      Violation: CloudFront Distributions need to to use a custom SSL/TLS certificate.\n      Fix: Set the AcmCertificateArn or IamCertificateId properties in the CloudFront Distribution DistributionConfig.ViewerCertificate configuration.\n    ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":161,"findingTitle":"CLOUDFRONT_MINIMUM_PROTOCOL_VERSION_RULE","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/CloudFrontDistribution[L:1074,C:4]] was not empty. \n    Violation: CloudFront Distribution resource do not use TLS 1.2 or viewerCertificate do no exist\n    Fix: Specify viewerCertificate and use TLS 1.2\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":162,"findingTitle":"CLOUDFRONT_ORIGIN_FAILOVER_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [OriginGroups.Quantity] to compare from is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":163,"findingTitle":"CLOUDFRONT_ORIGIN_FAILOVER_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [OriginGroups] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":164,"findingTitle":"CLOUDFRONT_ORIGIN_FAILOVER_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [OriginGroups.Items.*] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}] ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":165,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.SslSupportMethod] to compare from is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. \n      Violation: CloudFront Distributions are configured to use SNI to serve HTTPS requests.\n      Fix: Set the SslSupportMethod to 'sni-only' in the CloudFront Distribution DistributionConfig.ViewerCertificate configuration.\n    ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":166,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":167,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.SslSupportMethod] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":168,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.SslSupportMethod] to compare from is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1077,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1077}],"snippets":[{"startLine":1077,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":169,"findingTitle":"DYNAMODB_PITR_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled] to compare from is missing. Value traversed to [Path=/Resources/SessionsTable/Properties[L:140,C:6] Value={\"TableName\":\"mte-sessions\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"GSI1PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"GSI1SK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"ProjectionType\":\"ALL\"}}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true},\"StreamSpecification\":{\"StreamViewType\":\"NEW_AND_OLD_IMAGES\"}}]. \n      Violation: All DynamoDB Tables must have Point-In-Time-Recovery enabled.\n      Fix: Set the dynamodb table property PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled to true.\n    ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":140}],"snippets":[{"startLine":140,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":170,"findingTitle":"DYNAMODB_PITR_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled] to compare from is missing. Value traversed to [Path=/Resources/MessagesTable/Properties[L:174,C:6] Value={\"TableName\":\"mte-messages\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true}}]. \n      Violation: All DynamoDB Tables must have Point-In-Time-Recovery enabled.\n      Fix: Set the dynamodb table property PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled to true.\n    ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":174}],"snippets":[{"startLine":174,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":171,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.KMSMasterKeyId] is missing. Value traversed to [Path=/Resources/SessionsTable/Properties[L:140,C:6] Value={\"TableName\":\"mte-sessions\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"GSI1PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"GSI1SK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"ProjectionType\":\"ALL\"}}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true},\"StreamSpecification\":{\"StreamViewType\":\"NEW_AND_OLD_IMAGES\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":140}],"snippets":[{"startLine":140,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":172,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.SSEType] to compare from is missing. Value traversed to [Path=/Resources/MessagesTable/Properties[L:174,C:6] Value={\"TableName\":\"mte-messages\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true}}]. \n        Violation: Amazon DynamoDB tables are configured with SSE and a KMS key\n        Fix: In SSESpecification, set SSEEnabled to true and set KMSMasterKeyId to the ID of a KMS key\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":174}],"snippets":[{"startLine":174,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":173,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.SSEType] to compare from is missing. Value traversed to [Path=/Resources/SessionsTable/Properties[L:140,C:6] Value={\"TableName\":\"mte-sessions\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"GSI1PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"GSI1SK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"ProjectionType\":\"ALL\"}}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true},\"StreamSpecification\":{\"StreamViewType\":\"NEW_AND_OLD_IMAGES\"}}]. \n        Violation: Amazon DynamoDB tables are configured with SSE and a KMS key\n        Fix: In SSESpecification, set SSEEnabled to true and set KMSMasterKeyId to the ID of a KMS key\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":140}],"snippets":[{"startLine":140,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":174,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.KMSMasterKeyId] is missing. Value traversed to [Path=/Resources/MessagesTable/Properties[L:174,C:6] Value={\"TableName\":\"mte-messages\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":174}],"snippets":[{"startLine":174,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":175,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.SSEEnabled] to compare from is missing. Value traversed to [Path=/Resources/MessagesTable/Properties[L:174,C:6] Value={\"TableName\":\"mte-messages\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":174}],"snippets":[{"startLine":174,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":176,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.SSEEnabled] to compare from is missing. Value traversed to [Path=/Resources/SessionsTable/Properties[L:140,C:6] Value={\"TableName\":\"mte-sessions\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"GSI1PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"GSI1SK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"ProjectionType\":\"ALL\"}}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true},\"StreamSpecification\":{\"StreamViewType\":\"NEW_AND_OLD_IMAGES\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":140}],"snippets":[{"startLine":140,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":177,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification] is missing. Value traversed to [Path=/Resources/MessagesTable/Properties[L:174,C:6] Value={\"TableName\":\"mte-messages\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":174}],"snippets":[{"startLine":174,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":178,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification] is missing. Value traversed to [Path=/Resources/SessionsTable/Properties[L:140,C:6] Value={\"TableName\":\"mte-sessions\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"GSI1PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"GSI1SK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"ProjectionType\":\"ALL\"}}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true},\"StreamSpecification\":{\"StreamViewType\":\"NEW_AND_OLD_IMAGES\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":140}],"snippets":[{"startLine":140,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":179,"findingTitle":"DYNAMODB_TABLE_MUST_BE_ENCRYPTED","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.SSEEnabled] to compare from is missing. Value traversed to [Path=/Resources/MessagesTable/Properties[L:174,C:6] Value={\"TableName\":\"mte-messages\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true}}]. \n        Violation: Amazon DynamoDB tables are configured with SSE \n        Fix: In SSESpecification, set SSEEnabled to true\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":174}],"snippets":[{"startLine":174,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":180,"findingTitle":"DYNAMODB_TABLE_MUST_BE_ENCRYPTED","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification.SSEEnabled] to compare from is missing. Value traversed to [Path=/Resources/SessionsTable/Properties[L:140,C:6] Value={\"TableName\":\"mte-sessions\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"GSI1PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"GSI1SK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"ProjectionType\":\"ALL\"}}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true},\"StreamSpecification\":{\"StreamViewType\":\"NEW_AND_OLD_IMAGES\"}}]. \n        Violation: Amazon DynamoDB tables are configured with SSE \n        Fix: In SSESpecification, set SSEEnabled to true\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":140}],"snippets":[{"startLine":140,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":181,"findingTitle":"DYNAMODB_TABLE_MUST_BE_ENCRYPTED","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification] is missing. Value traversed to [Path=/Resources/MessagesTable/Properties[L:174,C:6] Value={\"TableName\":\"mte-messages\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":174}],"snippets":[{"startLine":174,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":182,"findingTitle":"DYNAMODB_TABLE_MUST_BE_ENCRYPTED","findingType":"code","findingDetail":"Check was not compliant as property [SSESpecification] is missing. Value traversed to [Path=/Resources/SessionsTable/Properties[L:140,C:6] Value={\"TableName\":\"mte-sessions\",\"BillingMode\":\"PAY_PER_REQUEST\",\"AttributeDefinitions\":[{\"AttributeName\":\"PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"SK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1PK\",\"AttributeType\":\"S\"},{\"AttributeName\":\"GSI1SK\",\"AttributeType\":\"S\"}],\"KeySchema\":[{\"AttributeName\":\"PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"SK\",\"KeyType\":\"RANGE\"}],\"GlobalSecondaryIndexes\":[{\"IndexName\":\"GSI1\",\"KeySchema\":[{\"AttributeName\":\"GSI1PK\",\"KeyType\":\"HASH\"},{\"AttributeName\":\"GSI1SK\",\"KeyType\":\"RANGE\"}],\"Projection\":{\"ProjectionType\":\"ALL\"}}],\"TimeToLiveSpecification\":{\"AttributeName\":\"ttl\",\"Enabled\":true},\"StreamSpecification\":{\"StreamViewType\":\"NEW_AND_OLD_IMAGES\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":140}],"snippets":[{"startLine":140,"text":"    Type: AWS::DynamoDB::Table\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":183,"findingTitle":"IAM_NO_INLINE_POLICY_CHECK","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/BedrockAgentServiceRole/Properties/Policies[L:68,C:8]] was not empty. \n    Violation: Inline policies are not allowed on IAM Users, Roles, or Groups.\n    Fix: Remove the Policies list property from any IAM Users, Roles, or Groups.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":184,"findingTitle":"IAM_POLICYDOCUMENT_NO_WILDCARD_RESOURCE","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/BedrockAgentServiceRole[L:55,C:4]] was not empty. \n    Violation: IAM Role inline policy should not allow resource: \"*\"\n    Fix: Limit resource as specifically as possible within your use case.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":185,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":186,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] to compare from is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. \n    Violation: S3 Bucket ObjectLockEnabled must be set to true.\n    Fix: Set the S3 property ObjectLockEnabled parameter to true.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":187,"findingTitle":"S3_BUCKET_LOGGING_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [LoggingConfiguration] is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. \n    Violation: S3 Bucket Logging needs to be configured to enable logging.\n    Fix: Set the S3 Bucket property LoggingConfiguration to start logging into S3 bucket.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":188,"findingTitle":"S3_BUCKET_NO_PUBLIC_RW_ACL","findingType":"code","findingDetail":"Check was not compliant as property [AccessControl] to compare from is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. \n    Violation: S3 Bucket should not have the PublicReadWrite ACL.\n    Fix: Allow ReadWrite access only to authorized, authenticated users.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":189,"findingTitle":"S3_BUCKET_REPLICATION_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ReplicationConfiguration] is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. \n    Violation: S3 Bucket replication should be enabled.\n    Fix: Set S3 Bucket ReplicationConfiguration to another S3 Bucket.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":190,"findingTitle":"S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [BucketEncryption] is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":191,"findingTitle":"S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [BucketEncryption.ServerSideEncryptionConfiguration[*].ServerSideEncryptionByDefault.SSEAlgorithm] to compare from is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. \n    Violation: S3 Bucket must enable server-side encryption.\n    Fix: Set the S3 Bucket property BucketEncryption.ServerSideEncryptionConfiguration.ServerSideEncryptionByDefault.SSEAlgorithm to either \"aws:kms\" or \"AES256\"\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":192,"findingTitle":"S3_BUCKET_VERSIONING_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [VersioningConfiguration] is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":193,"findingTitle":"S3_BUCKET_VERSIONING_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [VersioningConfiguration.Status] to compare from is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. \n    Violation: S3 Bucket Versioning must be enabled.\n    Fix: Set the S3 Bucket property VersioningConfiguration.Status to 'Enabled' .\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":194,"findingTitle":"S3_DEFAULT_ENCRYPTION_KMS","findingType":"code","findingDetail":"Check was not compliant as property [BucketEncryption.ServerSideEncryptionConfiguration[*].ServerSideEncryptionByDefault.SSEAlgorithm] to compare from is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. \n    Violation: S3 Bucket default encryption must be set.\n    Fix: Set the S3 Bucket property BucketEncryption.ServerSideEncryptionConfiguration.ServerSideEncryptionByDefault.SSEAlgorithm to either \"aws:kms\" or \"AES256\"\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":195,"findingTitle":"S3_DEFAULT_ENCRYPTION_KMS","findingType":"code","findingDetail":"Check was not compliant as property [BucketEncryption] is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1016,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"mte-prechat-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1016}],"snippets":[{"startLine":1016,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":196,"findingTitle":"SQS_QUEUE_KMS_MASTER_KEY_ID_RULE","findingType":"code","findingDetail":"Check was not compliant as property [KmsMasterKeyId] is missing. Value traversed to [Path=/Resources/AnalysisQueue/Properties[L:649,C:6] Value={\"QueueName\":\"mte-analysis-queue\",\"VisibilityTimeout\":900,\"MessageRetentionPeriod\":1209600}]. \n    Violation: SQS Queue KmsMasterKeyId does not exist\n    Fix: Specify KmsMasterKeyId value\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":649}],"snippets":[{"startLine":649,"text":"    Type: AWS::SQS::Queue\n    Properties:"}],"scanner":"cfn-guard"}]},{"category":"malware","scanStatus":"scanned","scanStatusMessage":"","scanners":["guardduty"],"findings":[]}]}]}