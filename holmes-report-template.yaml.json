{"scanId":"ffcd092b-594c-4c1f-aefa-94cab391753f","totalCount":1,"createdAt":"2025-08-14T06:09:15.733798882Z","objects":[{"key":"f169a68f-d2d7-46c1-bbbc-0b440dd826db/template.yaml","versionId":"TvVReWJiSnKQZi6GDOWBe6XzzFxeIdJo","size":50116,"contentType":"application/x-yaml","lastModifiedAt":"2025-08-14T06:09:15Z","skipScans":false,"skipScansReason":"","results":[{"category":"code","scanStatus":"scanned","scanStatusMessage":"","scanners":["ACAT","Checkov","cfn-guard"],"findings":[{"findingId":1,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/S3ReplicationRole/Properties/RoleName[L:1532,C:16]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":2,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/BedrockAgentServiceRole/Properties/RoleName[L:460,C:16]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":3,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/VPCEndpointSecurityGroup/Properties/GroupName[L:443,C:17]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":4,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/LambdaSecurityGroup/Properties/GroupName[L:351,C:17]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":5,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/MessagesTable/Properties/TableName[L:589,C:17]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":6,"findingTitle":"CFN_NO_EXPLICIT_RESOURCE_NAMES","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/SessionsTable/Properties/TableName[L:543,C:17]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":7,"findingTitle":"CKV_AWS_120","findingType":"code","findingDetail":"Ensure API Gateway caching is enabled","severity":"high","locations":[{"endColumn":0,"endLine":630,"startColumn":0,"startLine":619}],"snippets":[{"startLine":619,"text":"  # API Gateway\n  ApiGateway:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: !Ref Stage\n      Cors:\n        AllowMethods: \"'*'\"\n        AllowHeaders: \"'*'\"\n        AllowOrigin: \"'*'\"\n      Auth:\n        Authorizers:\n          CognitoAuthorizer:\n            UserPoolArn: !GetAtt AdminUserPool.Arn\n"}],"scanner":"Checkov"},{"findingId":8,"findingTitle":"CKV_AWS_158","findingType":"code","findingDetail":"Ensure that CloudWatch Log Group is encrypted by KMS","severity":"high","locations":[{"endColumn":0,"endLine":1446,"startColumn":0,"startLine":1442}],"snippets":[{"startLine":1442,"text":"  # CloudWatch Log Group for S3 Bucket Notifications\n  S3WebsiteBucketLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub \"/aws/s3/${AWS::StackName}-website-bucket\"\n      RetentionInDays: 30\n"}],"scanner":"Checkov"},{"findingId":9,"findingTitle":"CKV_AWS_174","findingType":"code","findingDetail":"Verify CloudFront Distribution Viewer Certificate is using TLS v1.2","severity":"high","locations":[{"endColumn":0,"endLine":1680,"startColumn":0,"startLine":1655}],"snippets":[{"startLine":1655,"text":"  # CloudFront Distribution\n  CloudFrontDistribution:\n    Type: AWS::CloudFront::Distribution\n    Properties:\n      DistributionConfig:\n        Origins:\n          - Id: S3Origin\n            DomainName: !GetAtt WebsiteBucket.RegionalDomainName\n            S3OriginConfig:\n              OriginAccessIdentity: ''\n            OriginAccessControlId: !Ref OriginAccessControl\n        Enabled: true\n        DefaultRootObject: index.html\n        DefaultCacheBehavior:\n          TargetOriginId: S3Origin\n          ViewerProtocolPolicy: redirect-to-https\n          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized\n          Compress: true\n        CustomErrorResponses:\n          - ErrorCode: 404\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n          - ErrorCode: 403\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n        PriceClass: PriceClass_100\n        Comment: !Sub \"MTE PreChat Website - ${Stage}\"\n"}],"scanner":"Checkov"},{"findingId":10,"findingTitle":"CKV_AWS_18","findingType":"code","findingDetail":"Ensure the S3 bucket has access logging enabled","severity":"high","locations":[{"endColumn":0,"endLine":1471,"startColumn":0,"startLine":1449}],"snippets":[{"startLine":1449,"text":"  # S3 Access Logging Bucket\n  AccessLoggingBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub \"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: false  # Allow bucket policy for S3 logging service\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: false  # Allow S3 logging service access\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: AES256\n            BucketKeyEnabled: true\n      VersioningConfiguration:\n        Status: Enabled\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-access-logs-${Stage}'\n        - Key: Environment\n          Value: !Ref Stage\n        - Key: Purpose\n          Value: AccessLogging\n"}],"scanner":"Checkov"},{"findingId":11,"findingTitle":"CKV_AWS_18","findingType":"code","findingDetail":"Ensure the S3 bucket has access logging enabled","severity":"high","locations":[{"endColumn":0,"endLine":1527,"startColumn":0,"startLine":1505}],"snippets":[{"startLine":1505,"text":"  # S3 Failover/Replication Bucket (Different Region)\n  FailoverBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub \"${AWS::StackName}-failover-${Stage}-${AWS::AccountId}\"\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: true\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: true\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: AES256\n            BucketKeyEnabled: true\n      VersioningConfiguration:\n        Status: Enabled\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-failover-${Stage}'\n        - Key: Environment\n          Value: !Ref Stage\n        - Key: Purpose\n          Value: Failover\n"}],"scanner":"Checkov"},{"findingId":12,"findingTitle":"CKV_AWS_33","findingType":"code","findingDetail":"Ensure KMS key policy does not contain wildcard (*) principal","severity":"high","locations":[{"endColumn":0,"endLine":108,"startColumn":0,"startLine":73}],"snippets":[{"startLine":73,"text":"  # KMS Key for Lambda Environment Variables Encryption\n  LambdaKMSKey:\n    Type: AWS::KMS::Key\n    Properties:\n      Description: KMS Key for Lambda function environment variables encryption\n      KeyPolicy:\n        Version: '2012-10-17'\n        Statement:\n          - Sid: Enable IAM User Permissions\n            Effect: Allow\n            Principal:\n              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'\n            Action: 'kms:*'\n            Resource: '*'\n          - Sid: Allow Lambda service to use the key\n            Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n            Resource: '*'\n          - Sid: Allow Lambda execution roles to use the key\n            Effect: Allow\n            Principal:\n              AWS: \"*\"\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:GenerateDataKey*\n              - kms:ReEncrypt*\n            Resource: '*'\n            Condition:\n              StringLike:\n                \"aws:PrincipalArn\": \n                  - !Sub \"arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-*\"\n"}],"scanner":"Checkov"},{"findingId":13,"findingTitle":"CKV_AWS_33","findingType":"code","findingDetail":"Ensure KMS key policy does not contain wildcard (*) principal","severity":"high","locations":[{"endColumn":0,"endLine":155,"startColumn":0,"startLine":117}],"snippets":[{"startLine":117,"text":"  # KMS Key for DynamoDB Tables Encryption\n  DynamoDBKMSKey:\n    Type: AWS::KMS::Key\n    Properties:\n      Description: KMS Key for DynamoDB tables encryption\n      KeyPolicy:\n        Version: '2012-10-17'\n        Statement:\n          - Sid: Enable IAM User Permissions\n            Effect: Allow\n            Principal:\n              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'\n            Action: 'kms:*'\n            Resource: '*'\n          - Sid: Allow DynamoDB service to use the key\n            Effect: Allow\n            Principal:\n              Service: dynamodb.amazonaws.com\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:GenerateDataKey*\n              - kms:ReEncrypt*\n            Resource: '*'\n          - Sid: Allow Lambda execution roles to use the key\n            Effect: Allow\n            Principal:\n              AWS: \"*\"\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:GenerateDataKey*\n              - kms:ReEncrypt*\n            Resource: '*'\n            Condition:\n              StringLike:\n                \"aws:PrincipalArn\": \n                  - !Sub \"arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-*\"\n"}],"scanner":"Checkov"},{"findingId":14,"findingTitle":"CKV_AWS_54","findingType":"code","findingDetail":"Ensure S3 bucket has block public policy enabled","severity":"high","locations":[{"endColumn":0,"endLine":1471,"startColumn":0,"startLine":1449}],"snippets":[{"startLine":1449,"text":"  # S3 Access Logging Bucket\n  AccessLoggingBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub \"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: false  # Allow bucket policy for S3 logging service\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: false  # Allow S3 logging service access\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: AES256\n            BucketKeyEnabled: true\n      VersioningConfiguration:\n        Status: Enabled\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-access-logs-${Stage}'\n        - Key: Environment\n          Value: !Ref Stage\n        - Key: Purpose\n          Value: AccessLogging\n"}],"scanner":"Checkov"},{"findingId":15,"findingTitle":"CKV_AWS_56","findingType":"code","findingDetail":"Ensure S3 bucket has RestrictPublicBuckets enabled","severity":"high","locations":[{"endColumn":0,"endLine":1471,"startColumn":0,"startLine":1449}],"snippets":[{"startLine":1449,"text":"  # S3 Access Logging Bucket\n  AccessLoggingBucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub \"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: false  # Allow bucket policy for S3 logging service\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: false  # Allow S3 logging service access\n      BucketEncryption:\n        ServerSideEncryptionConfiguration:\n          - ServerSideEncryptionByDefault:\n              SSEAlgorithm: AES256\n            BucketKeyEnabled: true\n      VersioningConfiguration:\n        Status: Enabled\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-access-logs-${Stage}'\n        - Key: Environment\n          Value: !Ref Stage\n        - Key: Purpose\n          Value: AccessLogging\n"}],"scanner":"Checkov"},{"findingId":16,"findingTitle":"CKV_AWS_68","findingType":"code","findingDetail":"CloudFront Distribution should have WAF enabled","severity":"high","locations":[{"endColumn":0,"endLine":1680,"startColumn":0,"startLine":1655}],"snippets":[{"startLine":1655,"text":"  # CloudFront Distribution\n  CloudFrontDistribution:\n    Type: AWS::CloudFront::Distribution\n    Properties:\n      DistributionConfig:\n        Origins:\n          - Id: S3Origin\n            DomainName: !GetAtt WebsiteBucket.RegionalDomainName\n            S3OriginConfig:\n              OriginAccessIdentity: ''\n            OriginAccessControlId: !Ref OriginAccessControl\n        Enabled: true\n        DefaultRootObject: index.html\n        DefaultCacheBehavior:\n          TargetOriginId: S3Origin\n          ViewerProtocolPolicy: redirect-to-https\n          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized\n          Compress: true\n        CustomErrorResponses:\n          - ErrorCode: 404\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n          - ErrorCode: 403\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n        PriceClass: PriceClass_100\n        Comment: !Sub \"MTE PreChat Website - ${Stage}\"\n"}],"scanner":"Checkov"},{"findingId":17,"findingTitle":"CKV_AWS_7","findingType":"code","findingDetail":"Ensure rotation for customer created CMKs is enabled","severity":"high","locations":[{"endColumn":0,"endLine":155,"startColumn":0,"startLine":117}],"snippets":[{"startLine":117,"text":"  # KMS Key for DynamoDB Tables Encryption\n  DynamoDBKMSKey:\n    Type: AWS::KMS::Key\n    Properties:\n      Description: KMS Key for DynamoDB tables encryption\n      KeyPolicy:\n        Version: '2012-10-17'\n        Statement:\n          - Sid: Enable IAM User Permissions\n            Effect: Allow\n            Principal:\n              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'\n            Action: 'kms:*'\n            Resource: '*'\n          - Sid: Allow DynamoDB service to use the key\n            Effect: Allow\n            Principal:\n              Service: dynamodb.amazonaws.com\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:GenerateDataKey*\n              - kms:ReEncrypt*\n            Resource: '*'\n          - Sid: Allow Lambda execution roles to use the key\n            Effect: Allow\n            Principal:\n              AWS: \"*\"\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:GenerateDataKey*\n              - kms:ReEncrypt*\n            Resource: '*'\n            Condition:\n              StringLike:\n                \"aws:PrincipalArn\": \n                  - !Sub \"arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-*\"\n"}],"scanner":"Checkov"},{"findingId":18,"findingTitle":"CKV_AWS_7","findingType":"code","findingDetail":"Ensure rotation for customer created CMKs is enabled","severity":"high","locations":[{"endColumn":0,"endLine":108,"startColumn":0,"startLine":73}],"snippets":[{"startLine":73,"text":"  # KMS Key for Lambda Environment Variables Encryption\n  LambdaKMSKey:\n    Type: AWS::KMS::Key\n    Properties:\n      Description: KMS Key for Lambda function environment variables encryption\n      KeyPolicy:\n        Version: '2012-10-17'\n        Statement:\n          - Sid: Enable IAM User Permissions\n            Effect: Allow\n            Principal:\n              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'\n            Action: 'kms:*'\n            Resource: '*'\n          - Sid: Allow Lambda service to use the key\n            Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n            Resource: '*'\n          - Sid: Allow Lambda execution roles to use the key\n            Effect: Allow\n            Principal:\n              AWS: \"*\"\n            Action:\n              - kms:Decrypt\n              - kms:DescribeKey\n              - kms:Encrypt\n              - kms:GenerateDataKey*\n              - kms:ReEncrypt*\n            Resource: '*'\n            Condition:\n              StringLike:\n                \"aws:PrincipalArn\": \n                  - !Sub \"arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-*\"\n"}],"scanner":"Checkov"},{"findingId":19,"findingTitle":"CKV_AWS_73","findingType":"code","findingDetail":"Ensure API Gateway has X-Ray Tracing enabled","severity":"high","locations":[{"endColumn":0,"endLine":630,"startColumn":0,"startLine":619}],"snippets":[{"startLine":619,"text":"  # API Gateway\n  ApiGateway:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: !Ref Stage\n      Cors:\n        AllowMethods: \"'*'\"\n        AllowHeaders: \"'*'\"\n        AllowOrigin: \"'*'\"\n      Auth:\n        Authorizers:\n          CognitoAuthorizer:\n            UserPoolArn: !GetAtt AdminUserPool.Arn\n"}],"scanner":"Checkov"},{"findingId":20,"findingTitle":"CKV_AWS_76","findingType":"code","findingDetail":"Ensure API Gateway has Access Logging enabled","severity":"high","locations":[{"endColumn":0,"endLine":630,"startColumn":0,"startLine":619}],"snippets":[{"startLine":619,"text":"  # API Gateway\n  ApiGateway:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: !Ref Stage\n      Cors:\n        AllowMethods: \"'*'\"\n        AllowHeaders: \"'*'\"\n        AllowOrigin: \"'*'\"\n      Auth:\n        Authorizers:\n          CognitoAuthorizer:\n            UserPoolArn: !GetAtt AdminUserPool.Arn\n"}],"scanner":"Checkov"},{"findingId":21,"findingTitle":"CKV_AWS_86","findingType":"code","findingDetail":"Ensure CloudFront Distribution has Access Logging enabled","severity":"high","locations":[{"endColumn":0,"endLine":1680,"startColumn":0,"startLine":1655}],"snippets":[{"startLine":1655,"text":"  # CloudFront Distribution\n  CloudFrontDistribution:\n    Type: AWS::CloudFront::Distribution\n    Properties:\n      DistributionConfig:\n        Origins:\n          - Id: S3Origin\n            DomainName: !GetAtt WebsiteBucket.RegionalDomainName\n            S3OriginConfig:\n              OriginAccessIdentity: ''\n            OriginAccessControlId: !Ref OriginAccessControl\n        Enabled: true\n        DefaultRootObject: index.html\n        DefaultCacheBehavior:\n          TargetOriginId: S3Origin\n          ViewerProtocolPolicy: redirect-to-https\n          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized\n          Compress: true\n        CustomErrorResponses:\n          - ErrorCode: 404\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n          - ErrorCode: 403\n            ResponseCode: 200\n            ResponsePagePath: /index.html\n        PriceClass: PriceClass_100\n        Comment: !Sub \"MTE PreChat Website - ${Stage}\"\n"}],"scanner":"Checkov"},{"findingId":22,"findingTitle":"CLOUDFRONT_ACCESSLOGS_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [Logging] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. \n    Violation: CloudFront Distributions need to be configured to log informaiton about requests the Distribution receives.\n    Fix: Set the CloudFront Distribution DistributionConfig.Logging.Bucket property to an S3 bucket you own that has been configured to receive CloudFront standard logs.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":23,"findingTitle":"CLOUDFRONT_CUSTOM_SSL_CERTIFICATE","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":24,"findingTitle":"CLOUDFRONT_CUSTOM_SSL_CERTIFICATE","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.AcmCertificateArn] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":25,"findingTitle":"CLOUDFRONT_CUSTOM_SSL_CERTIFICATE","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.IamCertificateId] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. \n      Violation: CloudFront Distributions need to to use a custom SSL/TLS certificate.\n      Fix: Set the AcmCertificateArn or IamCertificateId properties in the CloudFront Distribution DistributionConfig.ViewerCertificate configuration.\n    ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":26,"findingTitle":"CLOUDFRONT_MINIMUM_PROTOCOL_VERSION_RULE","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/CloudFrontDistribution[L:1655,C:4]] was not empty. \n    Violation: CloudFront Distribution resource do not use TLS 1.2 or viewerCertificate do no exist\n    Fix: Specify viewerCertificate and use TLS 1.2\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":27,"findingTitle":"CLOUDFRONT_ORIGIN_FAILOVER_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [OriginGroups.Quantity] to compare from is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":28,"findingTitle":"CLOUDFRONT_ORIGIN_FAILOVER_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [OriginGroups] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":29,"findingTitle":"CLOUDFRONT_ORIGIN_FAILOVER_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [OriginGroups.Items.*] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}] ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":30,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.SslSupportMethod] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":31,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.SslSupportMethod] to compare from is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. \n      Violation: CloudFront Distributions are configured to use SNI to serve HTTPS requests.\n      Fix: Set the SslSupportMethod to 'sni-only' in the CloudFront Distribution DistributionConfig.ViewerCertificate configuration.\n    ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":32,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate] is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":33,"findingTitle":"CLOUDFRONT_SNI_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ViewerCertificate.SslSupportMethod] to compare from is missing. Value traversed to [Path=/Resources/CloudFrontDistribution/Properties/DistributionConfig[L:1658,C:8] Value={\"Origins\":[{\"Id\":\"S3Origin\",\"DomainName\":{\"Fn::GetAtt\":\"WebsiteBucket.RegionalDomainName\"},\"S3OriginConfig\":{\"OriginAccessIdentity\":\"\"},\"OriginAccessControlId\":{\"Ref\":\"OriginAccessControl\"}}],\"Enabled\":true,\"DefaultRootObject\":\"index.html\",\"DefaultCacheBehavior\":{\"TargetOriginId\":\"S3Origin\",\"ViewerProtocolPolicy\":\"redirect-to-https\",\"CachePolicyId\":\"658327ea-f89d-4fab-a63d-7e88639e58f6\",\"Compress\":true},\"CustomErrorResponses\":[{\"ErrorCode\":404,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"},{\"ErrorCode\":403,\"ResponseCode\":200,\"ResponsePagePath\":\"/index.html\"}],\"PriceClass\":\"PriceClass_100\",\"Comment\":{\"Fn::Sub\":\"MTE PreChat Website - ${Stage}\"}}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":1658}],"snippets":[{"startLine":1658,"text":"    Properties:\n      DistributionConfig:"}],"scanner":"cfn-guard"},{"findingId":34,"findingTitle":"CLOUDWATCH_LOG_GROUP_ENCRYPTED","findingType":"code","findingDetail":"Check was not compliant as property [KmsKeyId] is missing. Value traversed to [Path=/Resources/S3WebsiteBucketLogGroup/Properties[L:1444,C:6] Value={\"LogGroupName\":{\"Fn::Sub\":\"/aws/s3/${AWS::StackName}-website-bucket\"},\"RetentionInDays\":30}]. \n    Violation: CloudWatch Log LogsGroup does not have KmsKeyId set.\n    Fix: Set the KmsKeyId parameter to a ARN.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1444}],"snippets":[{"startLine":1444,"text":"    Type: AWS::Logs::LogGroup\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":35,"findingTitle":"CMK_BACKING_KEY_ROTATION_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [EnableKeyRotation] to compare from is missing. Value traversed to [Path=/Resources/DynamoDBKMSKey/Properties[L:119,C:6] Value={\"Description\":\"KMS Key for DynamoDB tables encryption\",\"KeyPolicy\":{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Enable IAM User Permissions\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":{\"Fn::Sub\":\"arn:aws:iam::${AWS::AccountId}:root\"}},\"Action\":\"kms:*\",\"Resource\":\"*\"},{\"Sid\":\"Allow DynamoDB service to use the key\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"dynamodb.amazonaws.com\"},\"Action\":[\"kms:Decrypt\",\"kms:DescribeKey\",\"kms:Encrypt\",\"kms:GenerateDataKey*\",\"kms:ReEncrypt*\"],\"Resource\":\"*\"},{\"Sid\":\"Allow Lambda execution roles to use the key\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"kms:Decrypt\",\"kms:DescribeKey\",\"kms:Encrypt\",\"kms:GenerateDataKey*\",\"kms:ReEncrypt*\"],\"Resource\":\"*\",\"Condition\":{\"StringLike\":{\"aws:PrincipalArn\":[{\"Fn::Sub\":\"arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-*\"}]}}}]}}]. \n        Violation: Key rotation should be enabled for KMS keys.\n        Fix: Set the EnableKeyRotation property to true.\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":119}],"snippets":[{"startLine":119,"text":"    Type: AWS::KMS::Key\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":36,"findingTitle":"CMK_BACKING_KEY_ROTATION_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [EnableKeyRotation] to compare from is missing. Value traversed to [Path=/Resources/LambdaKMSKey/Properties[L:75,C:6] Value={\"Description\":\"KMS Key for Lambda function environment variables encryption\",\"KeyPolicy\":{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Enable IAM User Permissions\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":{\"Fn::Sub\":\"arn:aws:iam::${AWS::AccountId}:root\"}},\"Action\":\"kms:*\",\"Resource\":\"*\"},{\"Sid\":\"Allow Lambda service to use the key\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":[\"kms:Decrypt\",\"kms:DescribeKey\"],\"Resource\":\"*\"},{\"Sid\":\"Allow Lambda execution roles to use the key\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"kms:Decrypt\",\"kms:DescribeKey\",\"kms:Encrypt\",\"kms:GenerateDataKey*\",\"kms:ReEncrypt*\"],\"Resource\":\"*\",\"Condition\":{\"StringLike\":{\"aws:PrincipalArn\":[{\"Fn::Sub\":\"arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-*\"}]}}}]}}]. \n        Violation: Key rotation should be enabled for KMS keys.\n        Fix: Set the EnableKeyRotation property to true.\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":75}],"snippets":[{"startLine":75,"text":"    Type: AWS::KMS::Key\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":37,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSEType] to compare from is missing. Value traversed to [Path=/Resources/MessagesTable/Properties/SSESpecification[L:605,C:8] Value={\"SSEEnabled\":true,\"KMSMasterKeyId\":{\"Ref\":\"DynamoDBKMSKey\"}}]. \n        Violation: Amazon DynamoDB tables are configured with SSE and a KMS key\n        Fix: In SSESpecification, set SSEEnabled to true and set KMSMasterKeyId to the ID of a KMS key\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":605}],"snippets":[{"startLine":605,"text":"        Enabled: true\n      SSESpecification:"}],"scanner":"cfn-guard"},{"findingId":38,"findingTitle":"DYNAMODB_TABLE_ENCRYPTED_KMS","findingType":"code","findingDetail":"Check was not compliant as property [SSEType] to compare from is missing. Value traversed to [Path=/Resources/SessionsTable/Properties/SSESpecification[L:574,C:8] Value={\"SSEEnabled\":true,\"KMSMasterKeyId\":{\"Ref\":\"DynamoDBKMSKey\"}}]. \n        Violation: Amazon DynamoDB tables are configured with SSE and a KMS key\n        Fix: In SSESpecification, set SSEEnabled to true and set KMSMasterKeyId to the ID of a KMS key\n      ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":8,"startLine":574}],"snippets":[{"startLine":574,"text":"        StreamViewType: NEW_AND_OLD_IMAGES\n      SSESpecification:"}],"scanner":"cfn-guard"},{"findingId":39,"findingTitle":"EC2_SECURITY_GROUP_EGRESS_OPEN_TO_WORLD_RULE","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/LambdaSecurityGroup[L:349,C:4]] was not empty. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":40,"findingTitle":"IAM_NO_INLINE_POLICY_CHECK","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/BedrockAgentServiceRole/Properties/Policies[L:471,C:8]] was not empty. \n    Violation: Inline policies are not allowed on IAM Users, Roles, or Groups.\n    Fix: Remove the Policies list property from any IAM Users, Roles, or Groups.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":41,"findingTitle":"IAM_NO_INLINE_POLICY_CHECK","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/S3ReplicationRole/Properties/Policies[L:1541,C:8]] was not empty. \n    Violation: Inline policies are not allowed on IAM Users, Roles, or Groups.\n    Fix: Remove the Policies list property from any IAM Users, Roles, or Groups.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":42,"findingTitle":"IAM_POLICYDOCUMENT_NO_WILDCARD_RESOURCE","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/BedrockAgentServiceRole[L:458,C:4]] was not empty. \n    Violation: IAM Role inline policy should not allow resource: \"*\"\n    Fix: Limit resource as specifically as possible within your use case.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":43,"findingTitle":"NO_UNRESTRICTED_ROUTE_TO_IGW","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/DefaultPublicRoute/Properties/DestinationCidrBlock[L:290,C:28]] was not present in [(resolved, Path=[L:0,C:0] Value=[\"0.0.0.0/0\",\"::/0\"])] \n\t\t\t\tViolation: EC2 Routes to an IGW cannot have a destination CIDR block of '0.0.0.0/0' or '::/0' \n\t\t\t\tFix: Remove routes to an IGW (with the GatewayId property defined) or modify the DestinationCidrBlock property to a more restricted CIDR block\n\t\t\t","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":28,"startLine":290}],"snippets":[{"startLine":290,"text":"    Properties:\n      RouteTableId: !Ref PublicRouteTable"}],"scanner":"cfn-guard"},{"findingId":44,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1568,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"LoggingConfiguration\":{\"DestinationBucketName\":{\"Ref\":\"AccessLoggingBucket\"},\"LogFilePrefix\":{\"Fn::Sub\":\"${AWS::StackName}/\"}},\"ReplicationConfiguration\":{\"Role\":{\"Fn::GetAtt\":\"S3ReplicationRole.Arn\"},\"Rules\":[{\"Id\":\"ReplicateToFailover\",\"Status\":\"Enabled\",\"Destination\":{\"Bucket\":{\"Fn::Sub\":\"arn:aws:s3:::${FailoverBucket}\"},\"StorageClass\":\"ONEZONE_IA\"}}]},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-website-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Encryption\",\"Value\":\"SSE-S3\"},{\"Key\":\"Versioning\",\"Value\":\"Enabled\"},{\"Key\":\"Replication\",\"Value\":\"Enabled\"}]}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1568}],"snippets":[{"startLine":1568,"text":"    DependsOn: AccessLoggingBucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":45,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] is missing. Value traversed to [Path=/Resources/FailoverBucket/Properties[L:1507,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"Failover\"}]}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1507}],"snippets":[{"startLine":1507,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":46,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] is missing. Value traversed to [Path=/Resources/AccessLoggingBucket/Properties[L:1451,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":false,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":false},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"AccessLogging\"}]}]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1451}],"snippets":[{"startLine":1451,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":47,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] to compare from is missing. Value traversed to [Path=/Resources/FailoverBucket/Properties[L:1507,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"Failover\"}]}]. \n    Violation: S3 Bucket ObjectLockEnabled must be set to true.\n    Fix: Set the S3 property ObjectLockEnabled parameter to true.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1507}],"snippets":[{"startLine":1507,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":48,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] to compare from is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1568,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"LoggingConfiguration\":{\"DestinationBucketName\":{\"Ref\":\"AccessLoggingBucket\"},\"LogFilePrefix\":{\"Fn::Sub\":\"${AWS::StackName}/\"}},\"ReplicationConfiguration\":{\"Role\":{\"Fn::GetAtt\":\"S3ReplicationRole.Arn\"},\"Rules\":[{\"Id\":\"ReplicateToFailover\",\"Status\":\"Enabled\",\"Destination\":{\"Bucket\":{\"Fn::Sub\":\"arn:aws:s3:::${FailoverBucket}\"},\"StorageClass\":\"ONEZONE_IA\"}}]},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-website-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Encryption\",\"Value\":\"SSE-S3\"},{\"Key\":\"Versioning\",\"Value\":\"Enabled\"},{\"Key\":\"Replication\",\"Value\":\"Enabled\"}]}]. \n    Violation: S3 Bucket ObjectLockEnabled must be set to true.\n    Fix: Set the S3 property ObjectLockEnabled parameter to true.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1568}],"snippets":[{"startLine":1568,"text":"    DependsOn: AccessLoggingBucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":49,"findingTitle":"S3_BUCKET_DEFAULT_LOCK_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ObjectLockEnabled] to compare from is missing. Value traversed to [Path=/Resources/AccessLoggingBucket/Properties[L:1451,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":false,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":false},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"AccessLogging\"}]}]. \n    Violation: S3 Bucket ObjectLockEnabled must be set to true.\n    Fix: Set the S3 property ObjectLockEnabled parameter to true.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1451}],"snippets":[{"startLine":1451,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":50,"findingTitle":"S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/AccessLoggingBucket/Properties/PublicAccessBlockConfiguration/RestrictPublicBuckets[L:1456,C:31] Value=false] not equal to value [Path=[L:0,C:0] Value=true]. \n    Violation: S3 Bucket Public Access controls need to be restricted.\n    Fix: Set S3 Bucket PublicAccessBlockConfiguration properties for BlockPublicAcls, BlockPublicPolicy, IgnorePublicAcls, RestrictPublicBuckets parameters to true.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":51,"findingTitle":"S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/AccessLoggingBucket/Properties/PublicAccessBlockConfiguration/BlockPublicPolicy[L:1454,C:27] Value=false] not equal to value [Path=[L:0,C:0] Value=true]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":52,"findingTitle":"S3_BUCKET_LOGGING_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [LoggingConfiguration] is missing. Value traversed to [Path=/Resources/AccessLoggingBucket/Properties[L:1451,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":false,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":false},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"AccessLogging\"}]}]. \n    Violation: S3 Bucket Logging needs to be configured to enable logging.\n    Fix: Set the S3 Bucket property LoggingConfiguration to start logging into S3 bucket.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1451}],"snippets":[{"startLine":1451,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":53,"findingTitle":"S3_BUCKET_LOGGING_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [LoggingConfiguration] is missing. Value traversed to [Path=/Resources/FailoverBucket/Properties[L:1507,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"Failover\"}]}]. \n    Violation: S3 Bucket Logging needs to be configured to enable logging.\n    Fix: Set the S3 Bucket property LoggingConfiguration to start logging into S3 bucket.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1507}],"snippets":[{"startLine":1507,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":54,"findingTitle":"S3_BUCKET_NO_PUBLIC_RW_ACL","findingType":"code","findingDetail":"Check was not compliant as property [AccessControl] to compare from is missing. Value traversed to [Path=/Resources/FailoverBucket/Properties[L:1507,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"Failover\"}]}]. \n    Violation: S3 Bucket should not have the PublicReadWrite ACL.\n    Fix: Allow ReadWrite access only to authorized, authenticated users.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1507}],"snippets":[{"startLine":1507,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":55,"findingTitle":"S3_BUCKET_NO_PUBLIC_RW_ACL","findingType":"code","findingDetail":"Check was not compliant as property [AccessControl] to compare from is missing. Value traversed to [Path=/Resources/AccessLoggingBucket/Properties[L:1451,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":false,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":false},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"AccessLogging\"}]}]. \n    Violation: S3 Bucket should not have the PublicReadWrite ACL.\n    Fix: Allow ReadWrite access only to authorized, authenticated users.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1451}],"snippets":[{"startLine":1451,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":56,"findingTitle":"S3_BUCKET_NO_PUBLIC_RW_ACL","findingType":"code","findingDetail":"Check was not compliant as property [AccessControl] to compare from is missing. Value traversed to [Path=/Resources/WebsiteBucket/Properties[L:1568,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-website-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"LoggingConfiguration\":{\"DestinationBucketName\":{\"Ref\":\"AccessLoggingBucket\"},\"LogFilePrefix\":{\"Fn::Sub\":\"${AWS::StackName}/\"}},\"ReplicationConfiguration\":{\"Role\":{\"Fn::GetAtt\":\"S3ReplicationRole.Arn\"},\"Rules\":[{\"Id\":\"ReplicateToFailover\",\"Status\":\"Enabled\",\"Destination\":{\"Bucket\":{\"Fn::Sub\":\"arn:aws:s3:::${FailoverBucket}\"},\"StorageClass\":\"ONEZONE_IA\"}}]},\"CorsConfiguration\":{\"CorsRules\":[{\"Id\":\"FileUploadCorsRule\",\"AllowedHeaders\":[\"*\"],\"AllowedMethods\":[\"PUT\",\"POST\",\"GET\",\"HEAD\",\"DELETE\"],\"AllowedOrigins\":[\"*\"],\"ExposedHeaders\":[\"ETag\",\"x-amz-meta-original-filename-encoded\",\"x-amz-version-id\"],\"MaxAge\":3600}]},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-website-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Encryption\",\"Value\":\"SSE-S3\"},{\"Key\":\"Versioning\",\"Value\":\"Enabled\"},{\"Key\":\"Replication\",\"Value\":\"Enabled\"}]}]. \n    Violation: S3 Bucket should not have the PublicReadWrite ACL.\n    Fix: Allow ReadWrite access only to authorized, authenticated users.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1568}],"snippets":[{"startLine":1568,"text":"    DependsOn: AccessLoggingBucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":57,"findingTitle":"S3_BUCKET_PUBLIC_READ_PROHIBITED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/AccessLoggingBucket/Properties/PublicAccessBlockConfiguration/BlockPublicPolicy[L:1454,C:27] Value=false] not equal to value [Path=[L:0,C:0] Value=true]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":58,"findingTitle":"S3_BUCKET_PUBLIC_READ_PROHIBITED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/AccessLoggingBucket/Properties/PublicAccessBlockConfiguration/RestrictPublicBuckets[L:1456,C:31] Value=false] not equal to value [Path=[L:0,C:0] Value=true]. \n    Violation: S3 Bucket Public Write Access controls need to be restricted.\n    Fix: Set S3 Bucket PublicAccessBlockConfiguration properties for BlockPublicAcls, BlockPublicPolicy, IgnorePublicAcls, RestrictPublicBuckets parameters to true.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":59,"findingTitle":"S3_BUCKET_PUBLIC_WRITE_PROHIBITED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/AccessLoggingBucket/Properties/PublicAccessBlockConfiguration/RestrictPublicBuckets[L:1456,C:31] Value=false] not equal to value [Path=[L:0,C:0] Value=true]. \n    Violation: S3 Bucket Public Write Access controls need to be restricted.\n    Fix: Set S3 Bucket PublicAccessBlockConfiguration properties for BlockPublicAcls, BlockPublicPolicy, IgnorePublicAcls, RestrictPublicBuckets parameters to true.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":60,"findingTitle":"S3_BUCKET_PUBLIC_WRITE_PROHIBITED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/AccessLoggingBucket/Properties/PublicAccessBlockConfiguration/BlockPublicPolicy[L:1454,C:27] Value=false] not equal to value [Path=[L:0,C:0] Value=true]. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":61,"findingTitle":"S3_BUCKET_REPLICATION_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ReplicationConfiguration] is missing. Value traversed to [Path=/Resources/FailoverBucket/Properties[L:1507,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":true,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":true},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-failover-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"Failover\"}]}]. \n    Violation: S3 Bucket replication should be enabled.\n    Fix: Set S3 Bucket ReplicationConfiguration to another S3 Bucket.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1507}],"snippets":[{"startLine":1507,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":62,"findingTitle":"S3_BUCKET_REPLICATION_ENABLED","findingType":"code","findingDetail":"Check was not compliant as property [ReplicationConfiguration] is missing. Value traversed to [Path=/Resources/AccessLoggingBucket/Properties[L:1451,C:6] Value={\"BucketName\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}-${AWS::AccountId}\"},\"PublicAccessBlockConfiguration\":{\"BlockPublicAcls\":true,\"BlockPublicPolicy\":false,\"IgnorePublicAcls\":true,\"RestrictPublicBuckets\":false},\"BucketEncryption\":{\"ServerSideEncryptionConfiguration\":[{\"ServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"AES256\"},\"BucketKeyEnabled\":true}]},\"VersioningConfiguration\":{\"Status\":\"Enabled\"},\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-access-logs-${Stage}\"}},{\"Key\":\"Environment\",\"Value\":{\"Ref\":\"Stage\"}},{\"Key\":\"Purpose\",\"Value\":\"AccessLogging\"}]}]. \n    Violation: S3 Bucket replication should be enabled.\n    Fix: Set S3 Bucket ReplicationConfiguration to another S3 Bucket.\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":1451}],"snippets":[{"startLine":1451,"text":"    Type: AWS::S3::Bucket\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":63,"findingTitle":"S3_BUCKET_SSL_REQUESTS_ONLY","findingType":"code","findingDetail":"Check was not compliant as variable in context [ %ssl_secure_bucket_policies not EMPTY  ] was not empty ;    Violation: Bucket policies must feature a statement to enforce TLS usage.;    Fix: Set a bucket policy statement to '\"Action\":\"s3:*\",\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":\"*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":false}}' .;  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":64,"findingTitle":"SECURITY_GROUP_MISSING_EGRESS_RULE","findingType":"code","findingDetail":"Check was not compliant as property [SecurityGroupEgress] is missing. Value traversed to [Path=/Resources/VPCEndpointSecurityGroup/Properties[L:443,C:6] Value={\"GroupName\":{\"Fn::Sub\":\"${AWS::StackName}-vpc-endpoint-sg-${Stage}\"},\"GroupDescription\":\"Security group for VPC endpoints\",\"VpcId\":{\"Ref\":\"VPC\"},\"SecurityGroupIngress\":[{\"IpProtocol\":\"tcp\",\"FromPort\":443,\"ToPort\":443,\"SourceSecurityGroupId\":{\"Ref\":\"LambdaSecurityGroup\"},\"Description\":\"HTTPS from Lambda functions\"}],\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-vpc-endpoint-sg-${Stage}\"}}]}]. \n    Violation: Security Groups resources does not have Egresses specified.\n    Fix: Specify Egresses for all security group resources exists\n  ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":443}],"snippets":[{"startLine":443,"text":"    Type: AWS::EC2::SecurityGroup\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":65,"findingTitle":"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/PublicSubnet2/Properties/MapPublicIpOnLaunch[L:213,C:27] Value=true] not equal to value [Path=[L:0,C:0] Value=false]. \n    Violation: VPCs should not have subnets that are assigned a public IP address.\n    Fix: remove the MapPublicIpOnLaucnh property or set it to false\n\t","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":66,"findingTitle":"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED","findingType":"code","findingDetail":"Check was not compliant as property [MapPublicIpOnLaunch] to compare from is missing. Value traversed to [Path=/Resources/PrivateSubnet2/Properties[L:232,C:6] Value={\"VpcId\":{\"Ref\":\"VPC\"},\"AvailabilityZone\":{\"Fn::Select\":[1,{\"Fn::GetAZs\":\"\"}]},\"CidrBlock\":\"10.0.12.0/24\",\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-private-subnet-2-${Stage}\"}}]}]. \n    Violation: VPCs should not have subnets that are assigned a public IP address.\n    Fix: remove the MapPublicIpOnLaucnh property or set it to false\n\t","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":232}],"snippets":[{"startLine":232,"text":"    Type: AWS::EC2::Subnet\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":67,"findingTitle":"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED","findingType":"code","findingDetail":"Check was not compliant as property [MapPublicIpOnLaunch] to compare from is missing. Value traversed to [Path=/Resources/PrivateSubnet1/Properties[L:222,C:6] Value={\"VpcId\":{\"Ref\":\"VPC\"},\"AvailabilityZone\":{\"Fn::Select\":[0,{\"Fn::GetAZs\":\"\"}]},\"CidrBlock\":\"10.0.11.0/24\",\"Tags\":[{\"Key\":\"Name\",\"Value\":{\"Fn::Sub\":\"${AWS::StackName}-private-subnet-1-${Stage}\"}}]}]. \n    Violation: VPCs should not have subnets that are assigned a public IP address.\n    Fix: remove the MapPublicIpOnLaucnh property or set it to false\n\t","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":6,"startLine":222}],"snippets":[{"startLine":222,"text":"    Type: AWS::EC2::Subnet\n    Properties:"}],"scanner":"cfn-guard"},{"findingId":68,"findingTitle":"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/PublicSubnet2/Properties/MapPublicIpOnLaunch[L:213,C:27]] existed. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":69,"findingTitle":"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED","findingType":"code","findingDetail":"Check was not compliant as property [/Resources/PublicSubnet1/Properties/MapPublicIpOnLaunch[L:202,C:27]] existed. ","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"},{"findingId":70,"findingTitle":"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED","findingType":"code","findingDetail":"Check was not compliant as property value [Path=/Resources/PublicSubnet1/Properties/MapPublicIpOnLaunch[L:202,C:27] Value=true] not equal to value [Path=[L:0,C:0] Value=false]. \n    Violation: VPCs should not have subnets that are assigned a public IP address.\n    Fix: remove the MapPublicIpOnLaucnh property or set it to false\n\t","severity":"high","locations":[{"endColumn":0,"endLine":0,"startColumn":1,"startLine":1}],"snippets":[{"startLine":1,"text":"AWSTemplateFormatVersion: '2010-09-09'"}],"scanner":"cfn-guard"}]},{"category":"malware","scanStatus":"scanned","scanStatusMessage":"","scanners":["guardduty"],"findings":[]}]}]}