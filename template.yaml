AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.13
    Timeout: 30
    Environment:
      Variables:
        SESSIONS_TABLE: !Ref SessionsTable
        MESSAGES_TABLE: !Ref MessagesTable
        BEDROCK_REGION: ap-northeast-2

Resources:
  # DynamoDB Tables
  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: mte-sessions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  MessagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: mte-messages
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  # Lambda Functions
  ChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/backend/
      Handler: chat_handler.handle_message
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTable
        - Statement:
            Effect: Allow
            Action:
              - bedrock:InvokeModel
              - bedrock:Converse
            Resource: '*'
      Events:
        PostMessage:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/chat/message
            Method: post

  CreateSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/backend/
      Handler: session_handler.create_session
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
      Events:
        CreateSession:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/admin/sessions
            Method: post

  GetSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/backend/
      Handler: session_handler.get_session
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTable
      Events:
        GetSession:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/chat/session/{sessionId}
            Method: get

  ListSessionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/backend/
      Handler: admin_handler.list_sessions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
      Events:
        ListSessions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/admin/sessions
            Method: get

  GetReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/backend/
      Handler: admin_handler.get_session_report
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTable
        - Statement:
            Effect: Allow
            Action:
              - bedrock:InvokeModel
              - bedrock:Converse
            Resource: '*'
      Events:
        GetReport:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/admin/sessions/{sessionId}/report
            Method: get

  InactivateSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/backend/
      Handler: admin_handler.inactivate_session
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
      Events:
        InactivateSession:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/admin/sessions/{sessionId}/inactivate
            Method: put

  DeleteSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: packages/backend/
      Handler: admin_handler.delete_session
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTable
      Events:
        DeleteSession:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/admin/sessions/{sessionId}
            Method: delete

Outputs:
  ApiUrl:
    Description: API Gateway URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"